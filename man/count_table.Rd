% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count-table.R
\name{count_table}
\alias{count_table}
\title{Group data count and calculate proportions by column.}
\usage{
count_table(
  df,
  rowGroupVars,
  colGroupVars,
  numExpr = dplyr::n(),
  denomExpr = dplyr::n(),
  totalExpr = dplyr::n(),
  subgroupLevel = length(rowGroupVars),
  glue = list(`Count [\%] (N={sprintf("\%d",N)})` =
    "{sprintf(\\"\%d/\%d [\%1.1f\%\%]\\", x, n, mean*100)}"),
  label_fn = label_extractor(df),
  font_size = getOption("huxtableone.font_size", 8),
  font = getOption("huxtableone.font", "Arial")
)
}
\arguments{
\item{df}{a dataframe of linelist items}

\item{rowGroupVars}{the rows of the table. The last one of these is the denominator grouping}

\item{colGroupVars}{the column groupings of the table.}

\item{numExpr}{defines how the numerator is defined in the context of the column and row groups (e.g. dplyr::n())}

\item{denomExpr}{defines how the numerator is defined in the context of the column and row (ungrouped one level)}

\item{totalExpr}{defines how the column level total is defined}

\item{subgroupLevel}{defines how the numerator grouping is defined in terms of the row groupings}

\item{glue}{a named list of column value specifications.}

\item{label_fn}{(optional) a function for mapping a co-variate column name to
printable label. This is by default a no-operation and the output table
will contain the dataframe column names as labels. A simple alternative
would be some form of \link[dplyr:case_when]{dplyr::case_when} lookup, or a string function such
as \link[stringr:case]{stringr::str_to_sentence}. (N.b. this function must be vectorised).
Any value provided here will be overridden by the
\code{options("huxtableone.labeller" = my_label_fn)} which allows global setting of
the labeller.}

\item{font_size}{(optional) the font size for the table in points}

\item{font}{(optional) the font family for the table (which will be matched to
closest on your system)}
}
\value{
a huxtable with the count and proportions of the rows groups
}
\description{
Group data count and calculate proportions by column.
}
\examples{
diamonds \%>\% count_table(dplyr::vars(cut,clarity), dplyr::vars(color), subgroupLevel = 1)
}
