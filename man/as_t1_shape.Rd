% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/describe_data.R
\name{as_t1_shape}
\alias{as_t1_shape}
\title{Summarise a data set}
\usage{
as_t1_shape(df, ..., label_fn = label_extractor(df), units = extract_units(df))
}
\arguments{
\item{df}{a dataframe of individual observations. Grouping, if present, is ignored.
(n.b. if you wanted to construct multiple summary tables a \code{\link[dplyr:group_map]{dplyr::group_map()}} call
could be used)}

\item{...}{the columns of variables we wish to summarise. This can be given as
a \code{tidyselect} specification (see \code{utils::vignette("syntax", package = "tidyselect")}),
identifying the columns. Alternatively it can be given as a formula of the nature

\code{outcome ~ intervention + covariate_1 + covariate_2 + ...} .

which may be more convenient if you are going on to do a model fit. If the
latter format the left hand side is ignored (outcomes are not usual in
this kind of table).}

\item{label_fn}{(optional) a function for mapping a co-variate column name to
printable label. This is by default a no-operation and the output table
will contain the dataframe column names as labels. A simple alternative
would be some form of \link[dplyr:case_when]{dplyr::case_when} lookup, or a string function such
as \link[stringr:case]{stringr::str_to_sentence}. (N.b. this function must be vectorised).
Any value provided here will be overridden by the
\code{options("huxtableone.labeller" = my_label_fn)} which allows global setting of
the labeller.}

\item{units}{(optional) a named list of units, following a \verb{c(<colname_1> = "<unit_1>", <colname_2> = "<unit_2>", ...)} format. columns not present in
this list are assumed to have no units. Units may be involved in the
formatting of the summary output.}
}
\value{
a \code{t1_shape} data frame.
}
\description{
The data set description is a simple summary of the data formats, types and missingness
}
\examples{
tmp = iris \%>\% as_t1_shape(
  tidyselect::everything()
)
}
