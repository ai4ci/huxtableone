% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/missing-data.R
\name{compare_missing}
\alias{compare_missing}
\title{Compares missing data against an intervention in a summary table}
\usage{
compare_missing(
  df,
  ...,
  label_fn = label_extractor(df),
  p_format = names(.pvalue.defaults),
  font_size = getOption("tableone.font_size", 8),
  font = getOption("tableone.font", "Arial"),
  significance_limit = 0.05,
  missingness_limit = 0.1,
  footer_text = NULL,
  raw_output = FALSE
)
}
\arguments{
\item{df}{a dataframe of individual observations. If using the \code{tidyselect}
syntax data grouping defines the intervention group and should be present. if the
formula interface is used the first variable in the right hand side of the
formula is used as the intervention, in which case grouping is ignored.}

\item{...}{the columns of variables we wish to summarise. This can be given as
a \code{tidyselect} specification (see \code{utils::vignette("syntax", package = "tidyselect")}),
identifying the columns. Alternatively it can be given as a formula of the nature

\code{outcome ~ intervention + covariate_1 + covariate_2 + ...} .

which may be more convenient if you are going on to do a model fit later. If the
latter format the left hand side is ignored (outcomes are not usual in
this kind of table).}

\item{label_fn}{(optional) a function for mapping a co-variate column name to
printable label. This is by default a no-operation and the output table
will contain the dataframe column names as labels. A simple alternative
would be some form of \link[dplyr:case_when]{dplyr::case_when} lookup, or a string function such
as \link[stringr:case]{stringr::str_to_sentence}. (N.b. this function must be vectorised).
Any value provided here will be overridden by the
\code{options("tableone.labeller" = my_label_fn)} which allows global setting of
the labeller.}

\item{p_format}{the format of the p-values: one of
"sampl", "nejm", "jama", "lancet", "aim" but any value
here is overridden by the \verb{option("tableone.pvalue_formatter"=function(...))}}

\item{font_size}{(optional) the font size for the table in points}

\item{font}{(optional) the font family for the table (which will be matched to
closest on your system)}

\item{significance_limit}{the limit at which we reject the hypothesis that the
data is missing at random.}

\item{missingness_limit}{the limit at which too much data is missing
to include the predictor.}

\item{footer_text}{any text that needs to be added at the end of the table,
setting this to FALSE dsables the whole footer (as does
\code{options("tableone.hide_footer"=TRUE)}).}

\item{raw_output}{return comparison as tidy dataframe rather than formatted table}
}
\value{
a \code{huxtable} formatted table.
}
\description{
The missing data summary is a simple summary of the missingness of co-variates
in a data set with no reference to outcome, but comparing intervention groups.
It reports summary counts for missingness in data and reports on the
significance of that missingness in relation to the intervention groups,
allowing a clear summary of whether data is missing at random compared to the
intervention.
}
\examples{
# this option lets us change the column name for p value from its default
# "P value"
old = options("tableone.pvalue_column_name"="p-value")

# missing at random
missing_diamonds \%>\% dplyr::group_by(is_colored) \%>\% compare_missing(tidyselect::everything())

# nothing missing
iris \%>\% dplyr::group_by(Species) \%>\% compare_missing(tidyselect::everything())

# MNAR: by design missingness is correlated with grouping
mnar_two_class_1000 \%>\% dplyr::group_by(grouping) \%>\% compare_missing(tidyselect::everything())

options(old)
}
