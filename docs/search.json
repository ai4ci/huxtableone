[{"path":"https://ai4ci.github.io/huxtableone/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Bristol vaccine centre Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ai4ci.github.io/huxtableone/articles/configuration.html","id":"configuration-and-formatting-options","dir":"Articles","previous_headings":"","what":"Configuration and formatting options","title":"huxtableone: Configuration","text":"vignette provides examples formatting options. demonstrate use survival::cgd dataset:","code":"# set up the data  gcd = survival::cgd %>%    # filter to include only the first visit   dplyr::filter(enum==1) %>%    # make the steroids and propylac columns into a logical value   # see later for a better way of doing this.   dplyr::mutate(     steroids = as.logical(steroids),     propylac = as.logical(propylac)   )     # A basic unstratified population description table is as follows: formula = Surv(tstart, tstop, status) ~ treat +    sex + age + height + weight + inherit + steroids + hos.cat  gcd %>% compare_population(formula)"},{"path":"https://ai4ci.github.io/huxtableone/articles/configuration.html","id":"column-labelling","dir":"Articles","previous_headings":"Configuration and formatting options","what":"Column labelling","title":"huxtableone: Configuration","text":"custom labeller function can defined table.","code":"# set a table relabelling function rename_cols = function(col) {   dplyr::case_when(     col == \"hos.cat\" ~ \"Location\",     col == \"steroids\" ~ \"Steroid treatment\",     TRUE ~ stringr::str_to_sentence(col)   ) }  # set it using an option # we are not going to reset this as we will use in all the subsequent examples: options(\"huxtableone.labeller\"=rename_cols)  gcd %>% compare_population(formula)"},{"path":"https://ai4ci.github.io/huxtableone/articles/configuration.html","id":"content-format","dir":"Articles","previous_headings":"Configuration and formatting options","what":"Content format","title":"huxtableone: Configuration","text":"Change decimal point Change font font size Change labelling p-value column Change format p-value Hide daggers method p-value","code":"old = options(   # set a mid point as decimal point   \"huxtableone.dp\"=\"\\u00B7\",   \"huxtableone.font\"=\"Arial Narrow\",   \"huxtableone.font_size\"=12,   \"huxtableone.pvalue_column_name\"=\"p-value\",   # the p-value formatter must be a function that takes a vector of numbers and returns   # a vector of characters. The example here is a function that returns a function.   \"huxtableone.pvalue_formatter\" =            scales::label_pvalue(accuracy = 0.01,decimal.mark = \"\\u00B7\"),   \"huxtableone.show_pvalue_method\"=FALSE )   gcd %>% compare_population(formula) ## Warning: The requested font(s): [Arial Narrow], are not present on the system. Alternatives will be used. ## This warning is displayed once per session. # reset options(old)"},{"path":"https://ai4ci.github.io/huxtableone/articles/configuration.html","id":"summary-types","dir":"Articles","previous_headings":"Configuration and formatting options","what":"Summary types","title":"huxtableone: Configuration","text":"default statistics may seem wrong data, particularly decision around whether present mean median, depends detection normality data. presentation can overridden supplying named list override_type, names original column names override. won’t change method detection significance depends detection normality. test type significance levels also configurable.","code":"# override_type - names list of column names and summary type out of options  # with this looser definition of normality (i.e. less likely to reject the null # that the data is normally distributed), height and weight are found to be # and hence the t-test is used. old = options(   \"huxtableone.normality_test\"=\"lillie\",   \"huxtableone.normality_significance\"=0.00001 )  gcd %>% compare_population(     formula,     # age is still not normally distributed but we can override it to be      # presented as a mean and SD.     override_type = list(age=\"mean_sd\")   ) options(old) # the following option also controls which parametric test is chosen (between) # wilcoxon and ks tests: # options(\"huxtableone.tolerance_to_ties\"=0.25)"},{"path":"https://ai4ci.github.io/huxtableone/articles/configuration.html","id":"customising-the-number-of-decimal-places","dir":"Articles","previous_headings":"Configuration and formatting options","what":"Customising the number of decimal places","title":"huxtableone: Configuration","text":"Need change column column basis (eg. reals using named list) systematic bases (e.g. percent). Specification can either fixed (e.g. “2f”) significant figures (e.g. “3g”). N.b. setting independent p-value formatter.","code":"gcd %>% compare_population(     formula,     # can supply either the \"5f\" (for 5 digits floating point) or \"6g\"     # for 6 significant figures syntax:     override_real_dp = list(age=\"0f\",height=\"0f\",weight=\"2f\"),     # or a plain set of numbers. If the option is unnamed it is applied to      # all the variables:     override_percent_dp = 0   )"},{"path":"https://ai4ci.github.io/huxtableone/articles/configuration.html","id":"summary-format-customisation","dir":"Articles","previous_headings":"Configuration and formatting options","what":"Summary format customisation","title":"huxtableone: Configuration","text":"Standard layouts defined, “relaxed”, “compact”, “micro”, “simple”, “single”, “missing”, can used layout parameter give particular format columns content table.","code":"gcd %>% compare_population(     formula,     layout = \"relaxed\"   )"},{"path":"https://ai4ci.github.io/huxtableone/articles/configuration.html","id":"custom-layouts","dir":"Articles","previous_headings":"Configuration and formatting options","what":"Custom layouts","title":"huxtableone: Configuration","text":"“relaxed” standard layout defined using list. shown : can produce customised list based supply formatting function layout parameter. named list defines column name column contents, moment one item list must named characteristic. column contents can refer following variables: subtype_count can use {level}, {prob.0.5}, {prob.0.025}, {prob.0.975}, {x}, {n}, {N} - x subgroup count, n data count excluding missing, N includes missing. median_iqr can use {q.0.5}, {q.0.25}, …, {unit}, {n}, {N} - n excludes missing, N . mean_sd can use {mean}, {sd}, {unit}, {n}, {N} - n excludes missing, N . skipped can use {unit}, {n}, {N} - n excludes missing, N . characteristic column, column names derived names custom configuration list. names can also configured using glue can use intervention level data like {N} subgroup counts data level variables {N_total} number items across groups {N_missing} example. useful formatting functions spec can also use beyond usual text processing functions: .sprintf_na - sprintfs set numbers replacing output getOption(\"huxtableone.na\",\"\\u2014\") values missing, values missing replacing individual missing value withgetOption(\"huxtableone.missing\",\"<?>\") .sprintf_no_na - sprintfs set numbers replacing output getOption(\"huxtableone.na\",\"\\u2014\") values missing .maybe - returns string present “” NA","code":"list(     subtype_count = list(         characteristic = \"{level} % [95% CI]\",         Value = \"{.sprintf_na('%1.1f%% [%1.1f%%—%1.1f%%]',prob.0.5*100,prob.0.025*100,prob.0.975*100)}\",         `Count (N={N})` = \"{.sprintf_na('%d/%d',x,n)}\"     ),     median_iqr = list(         characteristic = \"Median [IQR]\",         Value = \"{.sprintf_na('%1.3g %s [%1.3g—%1.3g]',q.0.5,unit,q.0.25,q.0.75)}\",         `Count (N={N})` = \"{.sprintf_na('%d',n)}\"     ),     mean_sd = list(         characteristic = \"Mean ± SD\", Value = \"{.sprintf_na('%1.3g %s ± %1.3g',mean,unit,sd)}\",         `Count (N={N})` = \"{.sprintf_na('%d',n)}\"     ),     skipped = list(         characteristic = \"—\", Value = \"—\",         `Count (N={N})` = \"{.sprintf_na('%d',n)}\"     ) ) custom = list(     subtype_count = list(         characteristic = \"{level}\",         \"Value (N={N}/{N_total})\" = \"{.sprintf_na('%1.1f%% (%d/%d)',prob.0.5*100,x,n)}\"     ),     median_iqr = list(         characteristic = \"Median (N)\",         \"Value (N={N}/{N_total})\" = \"{.sprintf_na('%1.3g (%d)',q.0.5,n)}\"     ),     mean_sd = list(         characteristic = \"Mean (N)\",          \"Value (N={N}/{N_total})\" = \"{.sprintf_na('%1.3g (%d)',mean,n)}\"     ),     skipped = list(         characteristic = \"(N)\",          \"Value (N={N}/{N_total})\" = \"{.sprintf_na('— (%d)',n)}\"     ) )  # printing control the following options control missing values # produced by the .sprintf_na function: # getOption(\"huxtableone.missing\",\"<?>\") # getOption(\"huxtableone.na\",\"\\u2014\")   gcd %>% compare_population(     formula,     layout = custom   )"},{"path":"https://ai4ci.github.io/huxtableone/articles/configuration.html","id":"footer-customisation","dir":"Articles","previous_headings":"Configuration and formatting options","what":"Footer customisation","title":"huxtableone: Configuration","text":"Additional information can added default footer. Handy acronyms: can choose hide footer altogether:","code":"gcd %>% compare_population(    formula,    footer_text = c(       \"IQR: Interquartile range; CI: Confidence interval\",       \"Additional information could be supplied\")    ) old = options(\"huxtableone.hide_footer\"=TRUE)  # or we can choose to hide the footer altogether gcd %>% compare_population(formula) options(old)"},{"path":"https://ai4ci.github.io/huxtableone/articles/huxtableone.html","id":"formula-versus-tidyselect-interface","dir":"Articles","previous_headings":"","what":"Formula versus tidyselect interface","title":"huxtableone: Getting started","text":"huxtableone implemented allow subset columns large dataset pulled table without fuss. also designed workflow mind involves building statistical models data later. assume data follows general pattern one observation per row, individual columns specific data points observations may one : outcome: something assessing statistical model, maybe continuous outcome, time measure, logical measure. intervention: thing varied different observations covariates: factors may influence outcome want control . end want construct model takes following high level structure: outcome ~ intervention + covariate_1 + covariate_2 + ... + covariate_n","code":""},{"path":"https://ai4ci.github.io/huxtableone/articles/huxtableone.html","id":"simple-population-description-example","dir":"Articles","previous_headings":"Formula versus tidyselect interface","what":"Simple population description example","title":"huxtableone: Getting started","text":"build model need firstly compare distribution covariates population secondly compare intervention non-intervention groups, usually done without reference outcome. demonstrate using survival::cgd data set. specified using formula interface. example taken example formula might wish use survival model reuse give us targetted descriptive table. also possible supply huxtableone relabelling function maps column names printable labels, demonstrated : relabelling function can either passed invocation huxtableone functions option shown , makes labeller available subsequent calls. useful generating many tables single dataset. generally use formula interface exploration larger datasets covariates tidyselect interface may useful.","code":"cgd = survival::cgd %>%    # filter to include only the first visit   dplyr::filter(enum==1) %>%    # make the steroids and propylac columns into a logical value   # see later for a better way of doing this.   dplyr::mutate(     steroids = as.logical(steroids),     propylac = as.logical(propylac)   )     # A basic unstratified population description table is as follows: cgd %>% describe_population(tidyselect::everything()) #> Warning: Unknown or uninitialised column: `level`. # define a formula - this might be reused in model building later formula = Surv(tstart, tstop, status) ~ treat +    sex + age + height + weight + inherit + steroids + hos.cat  # set a table relabelling function rename_cols = function(col) {   dplyr::case_when(     col == \"hos.cat\" ~ \"Location\",     col == \"steroids\" ~ \"Steroid treatment\",     TRUE ~ stringr::str_to_sentence(col)   ) } options(\"huxtableone.labeller\"=rename_cols)  # create a simple description cgd %>% describe_population(formula)"},{"path":"https://ai4ci.github.io/huxtableone/articles/huxtableone.html","id":"comparing-the-population-by-intervention","dir":"Articles","previous_headings":"Formula versus tidyselect interface","what":"Comparing the population by intervention","title":"huxtableone: Getting started","text":"example useful table compares treatment groups. can use formula syntax , case first predictor assumed intervention data set compared intervention (case treat column). can conclude population well distributed placebo treatment groups major bias randomisation process: Alternatively using tidyselect interface alternate syntax given us table. Note must group data intervention, tidyselect work intended:","code":"# same as above formula = Surv(tstart, tstop, status) ~ treat +    sex + age + height + weight + inherit + steroids + hos.cat  # labelling function is still active cgd %>% compare_population(formula) cgd %>% dplyr::group_by(treat) %>%    compare_population(sex,age,height,weight,inherit,steroids,hos.cat)"},{"path":"https://ai4ci.github.io/huxtableone/articles/huxtableone.html","id":"analysis-of-missing-data","dir":"Articles","previous_headings":"","what":"Analysis of missing data","title":"huxtableone: Getting started","text":"need make sure data equivalent intervention groups also missing data unevenly distributed excessive. Reporting frequency missing data stratified intervention also easy, demonstrate make data set 10% placebo arm missing values, 25% treatment arm: Comparing new data set see significant differences data (steroids variable). quite small dataset sufficiently powered reliably detect difference missingness level (15% difference). analysis useful able update analysis formula removing variables missing data confident models based reasonable data.","code":"# generate a dataset with values missing not at random compared to the intervention: cgd_treat = cgd %>% dplyr::mutate(treat = as.character(treat)) %>% dplyr::filter(treat != \"placebo\") cgd_placebo = cgd %>% dplyr::mutate(treat = as.character(treat)) %>% dplyr::filter(treat == \"placebo\")  set.seed(100) mnar_cgd = dplyr::bind_rows(   cgd_placebo %>% .make_missing(p_missing = 0.1),   cgd_treat %>% .make_missing(p_missing = 0.25) ) # compare the MNAR dataset against the intervention: formula = Surv(tstart, tstop, status) ~ treat +    sex + age + height + weight + inherit + steroids + hos.cat  mnar_cgd %>% compare_missing(formula) # formula can also be a list of formulae new_formula = mnar_cgd %>% huxtableone::remove_missing(formula) #> More than 10% of data is missing for variables Sex, Age, Height, Weight, Inherit, Steroid treatment, Location. #> Data is missing not at random (compared to Treat) at a p-value<0.007 (0.05 over 7 comparisons) for variables Age.  print(new_formula) #> [[1]] #> Surv(tstart, tstop, status) ~ treat"},{"path":"https://ai4ci.github.io/huxtableone/articles/huxtableone.html","id":"conversion-of-discrete-data","dir":"Articles","previous_headings":"","what":"Conversion of discrete data","title":"huxtableone: Getting started","text":"Using new data set missing data may necessary discretise data, convert logical values properly named factors.","code":"decade = function(x) sprintf(\"%d-%d\",x-(x%%10),x-(x%%10)+9)  discrete_cgd = mnar_cgd %>%    # pick out the first episode   dplyr::filter(enum == 1) %>%   # convert data   make_factors(     steroids,propylac,age,weight,height,     .logical = c(\"received\",\"not received\"),     .numeric = list(       age=\"{decade(value)}\",       weight=\"{ifelse(value<20,'<20','20+')}\",       height=\"{ifelse(value<mean(value, na.rm=TRUE),'below average','above average')}\"     )   )  formula = Surv(tstart, tstop, status) ~ treat +    sex + age + height + weight + inherit + steroids + hos.cat   old = options(\"huxtableone.show_pvalue_method\"=TRUE) # This comparison implicitly ignores missing values. t = discrete_cgd %>% compare_population(formula) options(old)  t # N.B. The following option is involved when converting integer data # which decides how many levels of integer data are considered discrete # and when to decide integer data can be treated as continuous: options(\"huxtableone.max_discrete_levels\"=0) # and is described in the documentation for make_factors()."},{"path":"https://ai4ci.github.io/huxtableone/articles/huxtableone.html","id":"making-missing-factors-explicit","dir":"Articles","previous_headings":"","what":"Making missing factors explicit:","title":"huxtableone: Getting started","text":"comparison missing values included, cautious findings. missingness huxtableone calculate p-values. factor values missing (case) can include new group get robust comparison includes distribution missingness, can calculate p-value. However previously ordered variables, now regarded unordered determine value missing level.","code":"discrete_cgd %>% explicit_na() %>% compare_population(formula)"},{"path":"https://ai4ci.github.io/huxtableone/articles/huxtableone.html","id":"non-biomedical-data","dir":"Articles","previous_headings":"","what":"Non biomedical data","title":"huxtableone: Getting started","text":"Beyond bio-medical example huxtableone can make general comparison data structure like: ~ group + observation_1 + observation_2 + ... + observation_n use iris diamonds datasets demonstrate general use case huxtableone. missing_diamonds data set included package 10% values removed. demonstrates need reporting denominator.","code":"# revert the labeller setting to the default # and additionally hide the footer. old = options(   \"huxtableone.labeller\"=NULL,   \"huxtableone.show_pvalue_method\"=FALSE,   \"huxtableone.hide_footer\"=TRUE)  # the heuristics detect that Petals in the iris data set are not normally # distributed and hence report median and IQR: iris %>% dplyr::group_by(Species) %>% compare_population(tidyselect::everything()) options(old) # The counts sometimes seem redundant if there is no missing information: # however in a data set with missing values the denominators are important: missing_diamonds %>% describe_population(tidyselect::everything())"},{"path":"https://ai4ci.github.io/huxtableone/articles/tableone.html","id":"formula-versus-tidyselect-interface","dir":"Articles","previous_headings":"","what":"Formula versus tidyselect interface","title":"huxtableone: Getting started","text":"huxtableone implemented allow subset columns large dataset pulled table without fuss. also designed workflow mind involves building statistical models data later. assume data follows general pattern one observation per row, individual columns specific data points observations may one : outcome: something assessing statistical model, maybe continuous outcome, time measure, logical measure. intervention: thing varied different observations covariates: factors may influence outcome want control . end want construct model takes following high level structure: outcome ~ intervention + covariate_1 + covariate_2 + ... + covariate_n","code":""},{"path":"https://ai4ci.github.io/huxtableone/articles/tableone.html","id":"simple-population-description-example","dir":"Articles","previous_headings":"Formula versus tidyselect interface","what":"Simple population description example","title":"huxtableone: Getting started","text":"build model need firstly compare distribution covariates population secondly compare intervention non-intervention groups, usually done without reference outcome. demonstrate using survival::cgd data set. specified using formula interface. example taken example formula might wish use survival model reuse give us targetted descriptive table. also possible supply huxtableone relabelling function maps column names printable labels, demonstrated : relabelling function can either passed invocation huxtableone functions option shown , makes labeller available subsequent calls. useful generating many tables single dataset. generally use formula interface exploration larger datasets covariates tidyselect interface may useful.","code":"cgd = survival::cgd %>%    # filter to include only the first visit   dplyr::filter(enum==1) %>%    # make the steroids and propylac columns into a logical value   # see later for a better way of doing this.   dplyr::mutate(     steroids = as.logical(steroids),     propylac = as.logical(propylac)   )     # A basic unstratified population description table is as follows: cgd %>% describe_population(tidyselect::everything()) #> Warning: Unknown or uninitialised column: `level`. # define a formula - this might be reused in model building later formula = Surv(tstart, tstop, status) ~ treat +    sex + age + height + weight + inherit + steroids + hos.cat  # set a table relabelling function rename_cols = function(col) {   dplyr::case_when(     col == \"hos.cat\" ~ \"Location\",     col == \"steroids\" ~ \"Steroid treatment\",     TRUE ~ stringr::str_to_sentence(col)   ) } options(\"huxtableone.labeller\"=rename_cols)  # create a simple description cgd %>% describe_population(formula)"},{"path":"https://ai4ci.github.io/huxtableone/articles/tableone.html","id":"comparing-the-population-by-intervention","dir":"Articles","previous_headings":"Formula versus tidyselect interface","what":"Comparing the population by intervention","title":"huxtableone: Getting started","text":"example useful table compares treatment groups. can use formula syntax , case first predictor assumed intervention data set compared intervention (case treat column). can conclude population well distributed placebo treatment groups major bias randomisation process: Alternatively using tidyselect interface alternate syntax given us table. Note must group data intervention, tidyselect work intended:","code":"# same as above formula = Surv(tstart, tstop, status) ~ treat +    sex + age + height + weight + inherit + steroids + hos.cat  # labelling function is still active cgd %>% compare_population(formula) cgd %>% dplyr::group_by(treat) %>%    compare_population(sex,age,height,weight,inherit,steroids,hos.cat)"},{"path":"https://ai4ci.github.io/huxtableone/articles/tableone.html","id":"analysis-of-missing-data","dir":"Articles","previous_headings":"","what":"Analysis of missing data","title":"huxtableone: Getting started","text":"need make sure data equivalent intervention groups also missing data unevenly distributed excessive. Reporting frequency missing data stratified intervention also easy, demonstrate make data set 10% placebo arm missing values, 25% treatment arm: Comparing new data set see significant differences data (steroids variable). quite small dataset sufficiently powered reliably detect difference missingness level (15% difference). analysis useful able update analysis formula removing variables missing data confident models based reasonable data.","code":"# generate a dataset with values missing not at random compared to the intervention: cgd_treat = cgd %>% dplyr::mutate(treat = as.character(treat)) %>% dplyr::filter(treat != \"placebo\") cgd_placebo = cgd %>% dplyr::mutate(treat = as.character(treat)) %>% dplyr::filter(treat == \"placebo\")  set.seed(100) mnar_cgd = dplyr::bind_rows(   cgd_placebo %>% .make_missing(p_missing = 0.1),   cgd_treat %>% .make_missing(p_missing = 0.25) ) # compare the MNAR dataset against the intervention: formula = Surv(tstart, tstop, status) ~ treat +    sex + age + height + weight + inherit + steroids + hos.cat  mnar_cgd %>% compare_missing(formula) # formula can also be a list of formulae new_formula = mnar_cgd %>% huxtableone::remove_missing(formula) #> More than 10% of data is missing for variables Sex, Age, Height, Weight, Inherit, Steroid treatment, Location. #> Data is missing not at random (compared to Treat) at a p-value<0.007 (0.05 over 7 comparisons) for variables Age.  print(new_formula) #> [[1]] #> Surv(tstart, tstop, status) ~ treat"},{"path":"https://ai4ci.github.io/huxtableone/articles/tableone.html","id":"conversion-of-discrete-data","dir":"Articles","previous_headings":"","what":"Conversion of discrete data","title":"huxtableone: Getting started","text":"Using new data set missing data may necessary discretise data, convert logical values properly named factors.","code":"decade = function(x) sprintf(\"%d-%d\",x-(x%%10),x-(x%%10)+9)  discrete_cgd = mnar_cgd %>%    # pick out the first episode   dplyr::filter(enum == 1) %>%   # convert data   make_factors(     steroids,propylac,age,weight,height,     .logical = c(\"received\",\"not received\"),     .numeric = list(       age=\"{decade(value)}\",       weight=\"{ifelse(value<20,'<20','20+')}\",       height=\"{ifelse(value<mean(value, na.rm=TRUE),'below average','above average')}\"     )   )  formula = Surv(tstart, tstop, status) ~ treat +    sex + age + height + weight + inherit + steroids + hos.cat   old = options(\"huxtableone.show_pvalue_method\"=TRUE) # This comparison implicitly ignores missing values. t = discrete_cgd %>% compare_population(formula) options(old)  t # N.B. The following option is involved when converting integer data # which decides how many levels of integer data are considered discrete # and when to decide integer data can be treated as continuous: options(\"huxtableone.max_discrete_levels\"=0) # and is described in the documentation for make_factors()."},{"path":"https://ai4ci.github.io/huxtableone/articles/tableone.html","id":"making-missing-factors-explicit","dir":"Articles","previous_headings":"","what":"Making missing factors explicit:","title":"huxtableone: Getting started","text":"comparison missing values included, cautious findings. missingness huxtableone calculate p-values. factor values missing (case) can include new group get robust comparison includes distribution missingness, can calculate p-value. However previously ordered variables, now regarded unordered determine value missing level.","code":"discrete_cgd %>% explicit_na() %>% compare_population(formula)"},{"path":"https://ai4ci.github.io/huxtableone/articles/tableone.html","id":"non-biomedical-data","dir":"Articles","previous_headings":"","what":"Non biomedical data","title":"huxtableone: Getting started","text":"Beyond bio-medical example huxtableone can make general comparison data structure like: ~ group + observation_1 + observation_2 + ... + observation_n use iris diamonds datasets demonstrate general use case huxtableone. missing_diamonds data set included package 10% values removed. demonstrates need reporting denominator.","code":"# revert the labeller setting to the default # and additionally hide the footer. old = options(   \"huxtableone.labeller\"=NULL,   \"huxtableone.show_pvalue_method\"=FALSE,   \"huxtableone.hide_footer\"=TRUE)  # the heuristics detect that Petals in the iris data set are not normally # distributed and hence report median and IQR: iris %>% dplyr::group_by(Species) %>% compare_population(tidyselect::everything()) options(old) # The counts sometimes seem redundant if there is no missing information: # however in a data set with missing values the denominators are important: missing_diamonds %>% describe_population(tidyselect::everything())"},{"path":"https://ai4ci.github.io/huxtableone/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Robert Challen. Author, maintainer.","code":""},{"path":"https://ai4ci.github.io/huxtableone/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Challen R (2025). huxtableone: Descriptive Tables Observational Interventional Studies. R package version 0.4.4, https://github.com/ai4ci/huxtableone, https://doi.org/10.5281/zenodo.14794616, https://ai4ci.github.io/huxtableone/.","code":"@Manual{,   title = {huxtableone: Descriptive Tables for Observational or Interventional Studies},   author = {Robert Challen},   year = {2025},   note = {R package version 0.4.4,     https://github.com/ai4ci/huxtableone,     https://doi.org/10.5281/zenodo.14794616},   url = {https://ai4ci.github.io/huxtableone/}, }"},{"path":"https://ai4ci.github.io/huxtableone/index.html","id":"huxtableone-descriptive-tables-for-observational-or-interventional-studies-","dir":"","previous_headings":"","what":"Descriptive Tables for Observational or Interventional Studies","title":"Descriptive Tables for Observational or Interventional Studies","text":"goal huxtableone make easy generate comparison tables journal publication. converts line list experimental observational data summary table can grouped intervention. Reporting summaries kind data aware missing items, provide summary statistics statistical comparisons appropriate data. amenable automated decision making frequently automation must overridden. huxtableone provides automated one command statistical summary table output highly configurable. resulting tables huxtable format ready export wide range file types.","code":""},{"path":"https://ai4ci.github.io/huxtableone/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Descriptive Tables for Observational or Interventional Studies","text":"different huxtableone package CRAN. package hosted Bristol Vaccine Centre r-universe. Installation follows: can install development version huxtableone GitHub :","code":"options(repos = c(   \"ai4ci\" = 'https://ai4ci.r-universe.dev/',   CRAN = 'https://cloud.r-project.org'))  # Download and install huxtableone in R install.packages(\"huxtableone\") # install.packages(\"devtools\") devtools::install_github(\"ai4ci/huxtableone\")"},{"path":"https://ai4ci.github.io/huxtableone/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Descriptive Tables for Observational or Interventional Studies","text":"huxtableone make descriptive statistics consistent easy. Summarising dataset nicely formatted summary table simple following code. proper formatted output head main documentation website. huxtable output table can saved wide range formats spreadsheets documents latex html (even github README.md limited success). default output huxtableone can substantially customised fit specific journal’s requirements.","code":"# hide messages  old = options(huxtableone.quiet = TRUE)  # generate table  iris %>%    describe_population(everything())"},{"path":"https://ai4ci.github.io/huxtableone/reference/as_huxtable.t1_shape.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a t1_summary object to a huxtable — as_huxtable.t1_shape","title":"Convert a t1_summary object to a huxtable — as_huxtable.t1_shape","text":"Convert t1_summary object huxtable","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/as_huxtable.t1_shape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a t1_summary object to a huxtable — as_huxtable.t1_shape","text":"","code":"# S3 method for class 't1_shape' as_huxtable(   x,   ...,   font_size = getOption(\"huxtableone.font_size\", 8),   font = getOption(\"huxtableone.font\", \"Arial\"),   footer_text = NULL,   show_binary_value = NULL )"},{"path":"https://ai4ci.github.io/huxtableone/reference/as_huxtable.t1_shape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a t1_summary object to a huxtable — as_huxtable.t1_shape","text":"x t1_summary object produced describe_population ... used font_size (optional) font size table points font (optional) font family table (matched closest system) footer_text text needs added end table, setting FALSE dsables whole footer (options(\"huxtableone.hide_footer\"=TRUE)). show_binary_value set filter display covariates number possibilities exactly 2 value.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/as_huxtable.t1_shape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a t1_summary object to a huxtable — as_huxtable.t1_shape","text":"formatted table huxtable","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/as_huxtable.t1_signif.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a t1_signif S3 class to a huxtable — as_huxtable.t1_signif","title":"Convert a t1_signif S3 class to a huxtable — as_huxtable.t1_signif","text":"responsible printing significance test results comparison","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/as_huxtable.t1_signif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a t1_signif S3 class to a huxtable — as_huxtable.t1_signif","text":"","code":"# S3 method for class 't1_signif' as_huxtable(   x,   ...,   layout = \"compact\",   override_percent_dp = list(),   override_real_dp = list(),   p_format = names(.pvalue.defaults),   font_size = getOption(\"huxtableone.font_size\", 8),   font = getOption(\"huxtableone.font\", \"Arial\"),   footer_text = NULL,   show_binary_value = NULL )"},{"path":"https://ai4ci.github.io/huxtableone/reference/as_huxtable.t1_signif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a t1_signif S3 class to a huxtable — as_huxtable.t1_signif","text":"x t1_signif result calculated compare_population(...) ... used layout (optional) various layouts defined default. version huxtableone \"relaxed\",\"compact\",\"micro\",\"simple\",\"single\",\"missing\". layouts can customised using options options(\"huxtableone.format_list\"=list(...)\"), described detail vignettes. override_percent_dp (optional) named list overrides default precision formatting percentages, following c(<colname_1> = 2, <colname_2> = 4, ...) format. columns present list use defaults defined layout. See vignette customisation. override_real_dp (optional) named list overrides default precision formatting real values, following c(<colname_1> = 2, <colname_2> = 4, ...) format. columns present list use defaults defined layout. See utils::vignette(\"customisation\", package=\"huxtableone\"). p_format format p-values: one \"sampl\", \"nejm\", \"jama\", \"lancet\", \"aim\" value overridden option(\"huxtableone.pvalue_formatter\"=function(...)) font_size (optional) font size table points font (optional) font family table (matched closest system) footer_text text needs added end table, setting FALSE dsables whole footer (options(\"huxtableone.hide_footer\"=TRUE)). show_binary_value set filter display covariates number possibilities exactly 2 value.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/as_huxtable.t1_signif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a t1_signif S3 class to a huxtable — as_huxtable.t1_signif","text":"formatted table huxtable","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/as_huxtable.t1_signif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a t1_signif S3 class to a huxtable — as_huxtable.t1_signif","text":"","code":"library(huxtableone) tmp = iris %>% dplyr::group_by(Species) %>%   as_t1_signif(tidyselect::everything()) %>%   huxtable::as_huxtable() #> mean_sd summary for Sepal.Length #> mean_sd summary for Sepal.Width #> median_iqr summary for Petal.Length #> median_iqr summary for Petal.Width #> anova test on Sepal.Length #> anova test on Sepal.Width #> kruskal-wallis test on Petal.Length #> kruskal-wallis test on Petal.Width"},{"path":"https://ai4ci.github.io/huxtableone/reference/as_huxtable.t1_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a t1_summary object to a huxtable — as_huxtable.t1_summary","title":"Convert a t1_summary object to a huxtable — as_huxtable.t1_summary","text":"Convert t1_summary object huxtable","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/as_huxtable.t1_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a t1_summary object to a huxtable — as_huxtable.t1_summary","text":"","code":"# S3 method for class 't1_summary' as_huxtable(   x,   ...,   layout = \"single\",   override_percent_dp = list(),   override_real_dp = list(),   font_size = getOption(\"huxtableone.font_size\", 8),   font = getOption(\"huxtableone.font\", \"Arial\"),   footer_text = NULL,   show_binary_value = NULL )"},{"path":"https://ai4ci.github.io/huxtableone/reference/as_huxtable.t1_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a t1_summary object to a huxtable — as_huxtable.t1_summary","text":"x t1_summary object produced describe_population ... used layout (optional) various layouts defined default. version huxtableone \"relaxed\",\"compact\",\"micro\",\"simple\",\"single\",\"missing\". layouts can customised using options options(\"huxtableone.format_list\"=list(...)\"), described detail vignettes. override_percent_dp (optional) named list overrides default precision formatting percentages, following c(<colname_1> = 2, <colname_2> = 4, ...) format. columns present list use defaults defined layout. See vignette customisation. override_real_dp (optional) named list overrides default precision formatting real values, following c(<colname_1> = 2, <colname_2> = 4, ...) format. columns present list use defaults defined layout. See utils::vignette(\"customisation\", package=\"huxtableone\"). font_size (optional) font size table points font (optional) font family table (matched closest system) footer_text text needs added end table, setting FALSE dsables whole footer (options(\"huxtableone.hide_footer\"=TRUE)). show_binary_value set filter display covariates number possibilities exactly 2 value.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/as_huxtable.t1_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a t1_summary object to a huxtable — as_huxtable.t1_summary","text":"formatted table huxtable","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/as_t1_shape.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise a data set — as_t1_shape","title":"Summarise a data set — as_t1_shape","text":"data set description simple summary data formats, types missingness","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/as_t1_shape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise a data set — as_t1_shape","text":"","code":"as_t1_shape(df, ..., label_fn = label_extractor(df), units = extract_units(df))"},{"path":"https://ai4ci.github.io/huxtableone/reference/as_t1_shape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise a data set — as_t1_shape","text":"df dataframe individual observations. Grouping, present, ignored. (n.b. wanted construct multiple summary tables dplyr::group_map() call used) ... columns variables wish summarise. can given tidyselect specification (see utils::vignette(\"syntax\", package = \"tidyselect\")), identifying columns. Alternatively can given formula nature outcome ~ intervention + covariate_1 + covariate_2 + ... . may convenient going model fit. latter format left hand side ignored (outcomes usual kind table). label_fn (optional) function mapping co-variate column name printable label. default -operation output table contain dataframe column names labels. simple alternative form dplyr::case_when lookup, string function stringr::str_to_sentence. (N.b. function must vectorised). value provided overridden options(\"huxtableone.labeller\" = my_label_fn) allows global setting labeller. units (optional) named list units, following c(<colname_1> = \"<unit_1>\", <colname_2> = \"<unit_2>\", ...) format. columns present list assumed units. Units may involved formatting summary output.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/as_t1_shape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise a data set — as_t1_shape","text":"t1_shape data frame.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/as_t1_shape.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise a data set — as_t1_shape","text":"","code":"tmp = iris %>% as_t1_shape(   tidyselect::everything() )"},{"path":"https://ai4ci.github.io/huxtableone/reference/as_t1_signif.html","id":null,"dir":"Reference","previous_headings":"","what":"Compares the population against an intervention — as_t1_signif","title":"Compares the population against an intervention — as_t1_signif","text":"population comparison summary co-variates data set reference outcome, comparing intervention groups. report summary statistics continuous counts categorical data, intervention groups, reports significance association relation intervention groups. gives clear summary whether data correlated intervention.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/as_t1_signif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compares the population against an intervention — as_t1_signif","text":"","code":"as_t1_signif(   df,   ...,   label_fn = label_extractor(df),   units = extract_units(df),   override_type = list(),   override_method = list() )"},{"path":"https://ai4ci.github.io/huxtableone/reference/as_t1_signif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compares the population against an intervention — as_t1_signif","text":"df dataframe individual observations. using tidyselect syntax data grouping defines intervention group present. formula interface used first variable right hand side formula used intervention, case grouping ignored. ... columns variables wish summarise. can given tidyselect specification (see utils::vignette(\"syntax\", package = \"tidyselect\")), identifying columns. Alternatively can given formula nature outcome ~ intervention + covariate_1 + covariate_2 + ... . may convenient going model fit later. latter format left hand side ignored (outcomes usual kind table). label_fn (optional) function mapping co-variate column name printable label. default -operation output table contain dataframe column names labels. simple alternative form dplyr::case_when lookup, string function stringr::str_to_sentence. (N.b. function must vectorised). value provided overridden options(\"huxtableone.labeller\" = my_label_fn) allows global setting labeller. units (optional) named list units, following c(<colname_1> = \"<unit_1>\", <colname_2> = \"<unit_2>\", ...) format. columns present list assumed units. Units may involved formatting summary output. override_type (optional) named list data summary types. default type column data set calculated using heurisitics depending nature data (categorical continuous), result normality tests. want override options \"subtype_count\",\"median_iqr\",\"mean_sd\",\"skipped\" specify column column bases named list (e.g c(\"Petal.Width\"=\"mean_sd\")). Overriding default check type data correct summary type potentially cause errors done correctly. override_method want override comparison method particular variable options \"chi-sq trend\",\"fisher\",\"t-test\",\"2-sided wilcoxon\",\"2-sided ks\",\"anova\",\"kruskal-wallis\",\"comparison\" specify column column bases named list (e.g c(\"Petal.Width\"=\"t-test\"))","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/as_t1_signif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compares the population against an intervention — as_t1_signif","text":"t1_signif dataframe.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/as_t1_signif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compares the population against an intervention — as_t1_signif","text":"","code":"tmp = iris %>% dplyr::group_by(Species) %>% as_t1_signif(tidyselect::everything()) #> mean_sd summary for Sepal.Length #> mean_sd summary for Sepal.Width #> median_iqr summary for Petal.Length #> median_iqr summary for Petal.Width #> anova test on Sepal.Length #> anova test on Sepal.Width #> kruskal-wallis test on Petal.Length #> kruskal-wallis test on Petal.Width tmp = diamonds %>% dplyr::group_by(is_colored) %>% as_t1_signif(tidyselect::everything()) #> median_iqr summary for carat #> subtype_count summary for cut #> subtype_count summary for color #> subtype_count summary for clarity #> median_iqr summary for depth #> median_iqr summary for table #> median_iqr summary for price #> median_iqr summary for x #> median_iqr summary for y #> median_iqr summary for z #> 2-sided wilcoxon test on carat #> chi-sq trend test on cut #> chi-sq trend test on color #> chi-sq trend test on clarity #> 2-sided wilcoxon test on depth #> 2-sided wilcoxon test on table #> 2-sided wilcoxon test on price #> 2-sided wilcoxon test on x #> 2-sided wilcoxon test on y #> 2-sided wilcoxon test on z"},{"path":"https://ai4ci.github.io/huxtableone/reference/as_t1_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise a population — as_t1_summary","title":"Summarise a population — as_t1_summary","text":"population description simple summary co-variates data set reference outcome, comparing intervention (although might contain intervention rates.) report summary statistics continuous counts categorical data,","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/as_t1_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise a population — as_t1_summary","text":"","code":"as_t1_summary(   df,   ...,   label_fn = label_extractor(df),   units = extract_units(df),   override_type = list() )"},{"path":"https://ai4ci.github.io/huxtableone/reference/as_t1_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise a population — as_t1_summary","text":"df dataframe individual observations. Grouping, present, ignored. (n.b. wanted construct multiple summary tables dplyr::group_map() call used) ... columns variables wish summarise. can given tidyselect specification (see utils::vignette(\"syntax\", package = \"tidyselect\")), identifying columns. Alternatively can given formula nature outcome ~ intervention + covariate_1 + covariate_2 + ... . may convenient going model fit. latter format left hand side ignored (outcomes usual kind table). label_fn (optional) function mapping co-variate column name printable label. default -operation output table contain dataframe column names labels. simple alternative form dplyr::case_when lookup, string function stringr::str_to_sentence. (N.b. function must vectorised). value provided overridden options(\"huxtableone.labeller\" = my_label_fn) allows global setting labeller. units (optional) named list units, following c(<colname_1> = \"<unit_1>\", <colname_2> = \"<unit_2>\", ...) format. columns present list assumed units. Units may involved formatting summary output. override_type (optional) named list data summary types. default type column data set calculated using heurisitics depending nature data (categorical continuous), result normality tests. want override options \"subtype_count\",\"median_iqr\",\"mean_sd\",\"skipped\" specify column column bases named list (e.g c(\"Petal.Width\"=\"mean_sd\")). Overriding default check type data correct summary type potentially cause errors done correctly.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/as_t1_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise a population — as_t1_summary","text":"t1_summary data frame.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/as_t1_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise a population — as_t1_summary","text":"","code":"tmp = iris %>% as_t1_summary(   tidyselect::everything(),   override_type = c(Petal.Length = \"mean_sd\", Petal.Width = \"mean_sd\") ) #> mean_sd summary for Sepal.Length #> mean_sd summary for Sepal.Width #> mean_sd summary for Petal.Length #> mean_sd summary for Petal.Width #> subtype_count summary for Species"},{"path":"https://ai4ci.github.io/huxtableone/reference/as_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Reuse tidy-select syntax outside of a tidy-select function — as_vars","title":"Reuse tidy-select syntax outside of a tidy-select function — as_vars","text":"Reuse tidy-select syntax outside tidy-select function","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/as_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reuse tidy-select syntax outside of a tidy-select function — as_vars","text":"","code":"as_vars(tidyselect, data = NULL)"},{"path":"https://ai4ci.github.io/huxtableone/reference/as_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reuse tidy-select syntax outside of a tidy-select function — as_vars","text":"tidyselect tidyselect syntax evaluated context looking call call stack includes dataframe first argument data (optional) specific dataframe evaluate tidyselect","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/as_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reuse tidy-select syntax outside of a tidy-select function — as_vars","text":"list symbols resulting evaluation tidyselect context current call stack (provided data frame)","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/bad_test_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"A list of columns for a test case — bad_test_cols","title":"A list of columns for a test case — bad_test_cols","text":"list columns test case","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/bad_test_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list of columns for a test case — bad_test_cols","text":"","code":"bad_test_cols"},{"path":[]},{"path":[]},{"path":"https://ai4ci.github.io/huxtableone/reference/compare_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Compares missing data against an intervention in a summary table — compare_missing","title":"Compares missing data against an intervention in a summary table — compare_missing","text":"missing data summary simple summary missingness co-variates data set reference outcome, comparing intervention groups. reports summary counts missingness data reports significance missingness relation intervention groups, allowing clear summary whether data missing random compared intervention.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/compare_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compares missing data against an intervention in a summary table — compare_missing","text":"","code":"compare_missing(   df,   ...,   label_fn = label_extractor(df),   p_format = names(.pvalue.defaults),   font_size = getOption(\"huxtableone.font_size\", 8),   font = getOption(\"huxtableone.font\", \"Arial\"),   significance_limit = 0.05,   missingness_limit = 0.1,   footer_text = NULL,   raw_output = FALSE )"},{"path":"https://ai4ci.github.io/huxtableone/reference/compare_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compares missing data against an intervention in a summary table — compare_missing","text":"df dataframe individual observations. using tidyselect syntax data grouping defines intervention group present. formula interface used first variable right hand side formula used intervention, case grouping ignored. ... columns variables wish summarise. can given tidyselect specification (see utils::vignette(\"syntax\", package = \"tidyselect\")), identifying columns. Alternatively can given formula nature outcome ~ intervention + covariate_1 + covariate_2 + ... . may convenient going model fit later. latter format left hand side ignored (outcomes usual kind table). label_fn (optional) function mapping co-variate column name printable label. default -operation output table contain dataframe column names labels. simple alternative form dplyr::case_when lookup, string function stringr::str_to_sentence. (N.b. function must vectorised). value provided overridden options(\"huxtableone.labeller\" = my_label_fn) allows global setting labeller. p_format format p-values: one \"sampl\", \"nejm\", \"jama\", \"lancet\", \"aim\" value overridden option(\"huxtableone.pvalue_formatter\"=function(...)) font_size (optional) font size table points font (optional) font family table (matched closest system) significance_limit limit reject hypothesis data missing random. missingness_limit limit much data missing include predictor. footer_text text needs added end table, setting FALSE dsables whole footer (options(\"huxtableone.hide_footer\"=TRUE)). raw_output return comparison tidy dataframe rather formatted table","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/compare_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compares missing data against an intervention in a summary table — compare_missing","text":"huxtable formatted table.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/compare_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compares missing data against an intervention in a summary table — compare_missing","text":"","code":"# this option lets us change the column name for p value from its default # \"P value\" old = options(\"huxtableone.pvalue_column_name\"=\"p-value\")  # missing at random missing_diamonds %>% dplyr::group_by(is_colored) %>% compare_missing(tidyselect::everything()) #> subtype_count summary for carat #> subtype_count summary for cut #> subtype_count summary for color #> subtype_count summary for clarity #> subtype_count summary for depth #> subtype_count summary for table #> subtype_count summary for price #> subtype_count summary for x #> subtype_count summary for y #> subtype_count summary for z #> fisher test on carat #> fisher test on cut #> fisher test on color #> fisher test on clarity #> fisher test on depth #> fisher test on table #> fisher test on price #> fisher test on x #> fisher test on y #> fisher test on z #>           ──────────────────────────────────────────────────────────── #>                        clear              colored                      #>             variable   missing % (N)      missing % (N)      p-value   #>           ──────────────────────────────────────────────────────────── #>             carat      10.0%              9.7%               0.26      #>                        (1651/16572)       (3607/37368)                 #>             z          9.6%               10.2%              0.04      #>                        (1587/16572)       (3794/37368)                 #>             cut        9.6%               10.2%              0.05      #>                        (1592/16572)       (3795/37368)                 #>             color      9.7%               10.1%              0.18      #>                        (1607/16572)       (3764/37368)                 #>             clarity    10.2%              10.0%              0.49      #>                        (1685/16572)       (3728/37368)                 #>             depth      10.0%              9.9%               0.84      #>                        (1652/16572)       (3704/37368)                 #>             table      9.9%               9.6%               0.22      #>                        (1647/16572)       (3586/37368)                 #>             price      9.6%               9.8%               0.35      #>                        (1587/16572)       (3678/37368)                 #>             x          9.9%               10.0%              0.65      #>                        (1633/16572)       (3730/37368)                 #>             y          10.1%              9.9%               0.39      #>                        (1675/16572)       (3687/37368)                 #>           ──────────────────────────────────────────────────────────── #>             More than 10% of data is missing for variables             #>             clarity.                                                   #>  #> Column names: variable, 1, 2, p-value  # nothing missing iris %>% dplyr::group_by(Species) %>% compare_missing(tidyselect::everything()) #> subtype_count summary for Sepal.Length #> subtype_count summary for Sepal.Width #> subtype_count summary for Petal.Length #> subtype_count summary for Petal.Width #> fisher test on Sepal.Length #> fisher test on Sepal.Width #> fisher test on Petal.Length #> fisher test on Petal.Width #>     ─────────────────────────────────────────────────────────────────────── #>                      setosa         versicolor     virginica                #>       variable       missing %      missing %      missing %      p-value   #>                      (N)            (N)            (N)                      #>     ─────────────────────────────────────────────────────────────────────── #>       Sepal.Length   0.0% (0/50)    0.0% (0/50)    0.0% (0/50)    —         #>       Sepal.Width    0.0% (0/50)    0.0% (0/50)    0.0% (0/50)    —         #>       Petal.Length   0.0% (0/50)    0.0% (0/50)    0.0% (0/50)    —         #>       Petal.Width    0.0% (0/50)    0.0% (0/50)    0.0% (0/50)    —         #>     ─────────────────────────────────────────────────────────────────────── #>                                                                             #>  #> Column names: variable, 1, 2, 3, p-value  # MNAR: by design missingness is correlated with grouping mnar_two_class_1000 %>% dplyr::group_by(grouping) %>% compare_missing(tidyselect::everything()) #> subtype_count summary for uniform_variable #> subtype_count summary for normal_variable #> subtype_count summary for binomial_class #> subtype_count summary for multinom_class #> subtype_count summary for ordered_class #> subtype_count summary for discrete #> subtype_count summary for ignore_me #> fisher test on uniform_variable #> fisher test on normal_variable #> fisher test on binomial_class #> fisher test on multinom_class #> fisher test on ordered_class #> fisher test on discrete #> fisher test on ignore_me #>  ───────────────────────────────────────────────────────────────────────────── #>                       10% missing        20% missing                           #>    variable           missing % (N)      missing % (N)      p-value            #>  ───────────────────────────────────────────────────────────────────────────── #>    uniform_variable   7.3% (73/1000)     18.9% (189/1000)   <0.001             #>    normal_variable    9.9% (99/1000)     19.3% (193/1000)   <0.001             #>    binomial_class     9.9% (99/1000)     18.8% (188/1000)   <0.001             #>    multinom_class     10.1% (101/1000)   17.9% (179/1000)   <0.001             #>    ordered_class      9.9% (99/1000)     19.1% (191/1000)   <0.001             #>    discrete           10.6% (106/1000)   19.6% (196/1000)   <0.001             #>    ignore_me          100.0%             100.0%             1                  #>                       (1000/1000)        (1000/1000)                           #>  ───────────────────────────────────────────────────────────────────────────── #>    More than 10% of data is missing for variables uniform_variable,            #>    normal_variable, binomial_class, multinom_class, ordered_class,             #>    discrete, ignore_me.                                                        #>    Data is missing not at random (compared to grouping) at a                   #>    p-value<0.007 (0.05 over 7 comparisons) for variables                       #>    uniform_variable, normal_variable, binomial_class,                          #>    multinom_class, ordered_class, discrete.                                    #>  #> Column names: variable, 1, 2, p-value  options(old)"},{"path":"https://ai4ci.github.io/huxtableone/reference/compare_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Compares multiple outcomes against an intervention in a summary table — compare_outcomes","title":"Compares multiple outcomes against an intervention in a summary table — compare_outcomes","text":"outcome table simple summary binary categorical outcome data set compared intervention groups. comparison independent covariates, preliminary output prior formal statistical analysis model fitting.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/compare_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compares multiple outcomes against an intervention in a summary table — compare_outcomes","text":"","code":"compare_outcomes(   df,   ...,   label_fn = label_extractor(df),   units = extract_units(df),   override_type = list(),   layout = \"compact\",   override_percent_dp = list(),   override_real_dp = list(),   p_format = names(.pvalue.defaults),   font_size = getOption(\"huxtableone.font_size\", 8),   font = getOption(\"huxtableone.font\", \"Arial\"),   footer_text = NULL,   show_binary_value = NULL,   raw_output = FALSE )"},{"path":"https://ai4ci.github.io/huxtableone/reference/compare_outcomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compares multiple outcomes against an intervention in a summary table — compare_outcomes","text":"df dataframe individual observations. using tidyselect syntax data grouping defines intervention group present. formula interface used first variable right hand side formula used intervention, case grouping ignored. ... outcomes specified either tidyselect specification, case grouping df input determines intervention output compare_population() call tidyselect. Alternatively set formulae can provided specify outcomes left hand side, e.g. outcome1 ~ intervention + cov1, outcome2 ~ intervention + cov1, ... case intervention must formulae used determine comparison groups. label_fn (optional) function mapping co-variate column name printable label. default -operation output table contain dataframe column names labels. simple alternative form dplyr::case_when lookup, string function stringr::str_to_sentence. (N.b. function must vectorised). value provided overridden options(\"huxtableone.labeller\" = my_label_fn) allows global setting labeller. units (optional) named list units, following c(<colname_1> = \"<unit_1>\", <colname_2> = \"<unit_2>\", ...) format. columns present list assumed units. Units may involved formatting summary output. override_type (optional) named list data summary types. default type column data set calculated using heurisitics depending nature data (categorical continuous), result normality tests. want override options \"subtype_count\",\"median_iqr\",\"mean_sd\",\"skipped\" specify column column bases named list (e.g c(\"Petal.Width\"=\"mean_sd\")). Overriding default check type data correct summary type potentially cause errors done correctly. layout (optional) various layouts defined default. version huxtableone \"relaxed\",\"compact\",\"micro\",\"simple\",\"single\",\"missing\". layouts can customised using options options(\"huxtableone.format_list\"=list(...)\"), described detail vignettes. override_percent_dp (optional) named list overrides default precision formatting percentages, following c(<colname_1> = 2, <colname_2> = 4, ...) format. columns present list use defaults defined layout. See vignette customisation. override_real_dp (optional) named list overrides default precision formatting real values, following c(<colname_1> = 2, <colname_2> = 4, ...) format. columns present list use defaults defined layout. See utils::vignette(\"customisation\", package=\"huxtableone\"). p_format format p-values: one \"sampl\", \"nejm\", \"jama\", \"lancet\", \"aim\" value overridden option(\"huxtableone.pvalue_formatter\"=function(...)) font_size (optional) font size table points font (optional) font family table (matched closest system) footer_text text needs added end table, setting FALSE dsables whole footer (options(\"huxtableone.hide_footer\"=TRUE)). show_binary_value set filter display covariates number possibilities exactly 2 value. raw_output return comparison t1_signif dataframe rather formatted table","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/compare_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compares multiple outcomes against an intervention in a summary table — compare_outcomes","text":"huxtable formatted table.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/compare_outcomes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compares multiple outcomes against an intervention in a summary table — compare_outcomes","text":"reports summary counts outcomes measure significance relationship outcome intervention. Interpretation significance tests, include Bonferroni adjustment.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/compare_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Compares the population against an intervention in a summary table — compare_population","title":"Compares the population against an intervention in a summary table — compare_population","text":"population comparison summary co-variates data set reference outcome, comparing intervention groups. report summary statistics continuous counts categorical data, intervention groups, reports significance association relation intervention groups. gives clear summary whether data correlated intervention.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/compare_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compares the population against an intervention in a summary table — compare_population","text":"","code":"compare_population(   df,   ...,   label_fn = label_extractor(df),   units = extract_units(df),   override_type = list(),   override_method = list(),   layout = \"compact\",   override_percent_dp = list(),   override_real_dp = list(),   p_format = names(.pvalue.defaults),   font_size = getOption(\"huxtableone.font_size\", 8),   font = getOption(\"huxtableone.font\", \"Arial\"),   footer_text = NULL,   show_binary_value = NULL,   raw_output = FALSE )"},{"path":"https://ai4ci.github.io/huxtableone/reference/compare_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compares the population against an intervention in a summary table — compare_population","text":"df dataframe individual observations. using tidyselect syntax data grouping defines intervention group present. formula interface used first variable right hand side formula used intervention, case grouping ignored. ... columns variables wish summarise. can given tidyselect specification (see utils::vignette(\"syntax\", package = \"tidyselect\")), identifying columns. Alternatively can given formula nature outcome ~ intervention + covariate_1 + covariate_2 + ... . may convenient going model fit later. latter format left hand side ignored (outcomes usual kind table). label_fn (optional) function mapping co-variate column name printable label. default -operation output table contain dataframe column names labels. simple alternative form dplyr::case_when lookup, string function stringr::str_to_sentence. (N.b. function must vectorised). value provided overridden options(\"huxtableone.labeller\" = my_label_fn) allows global setting labeller. units (optional) named list units, following c(<colname_1> = \"<unit_1>\", <colname_2> = \"<unit_2>\", ...) format. columns present list assumed units. Units may involved formatting summary output. override_type (optional) named list data summary types. default type column data set calculated using heurisitics depending nature data (categorical continuous), result normality tests. want override options \"subtype_count\",\"median_iqr\",\"mean_sd\",\"skipped\" specify column column bases named list (e.g c(\"Petal.Width\"=\"mean_sd\")). Overriding default check type data correct summary type potentially cause errors done correctly. override_method want override comparison method particular variable options \"chi-sq trend\",\"fisher\",\"t-test\",\"2-sided wilcoxon\",\"2-sided ks\",\"anova\",\"kruskal-wallis\",\"comparison\" specify column column bases named list (e.g c(\"Petal.Width\"=\"t-test\")) layout (optional) various layouts defined default. version huxtableone \"relaxed\",\"compact\",\"micro\",\"simple\",\"single\",\"missing\". layouts can customised using options options(\"huxtableone.format_list\"=list(...)\"), described detail vignettes. override_percent_dp (optional) named list overrides default precision formatting percentages, following c(<colname_1> = 2, <colname_2> = 4, ...) format. columns present list use defaults defined layout. See vignette customisation. override_real_dp (optional) named list overrides default precision formatting real values, following c(<colname_1> = 2, <colname_2> = 4, ...) format. columns present list use defaults defined layout. See utils::vignette(\"customisation\", package=\"huxtableone\"). p_format format p-values: one \"sampl\", \"nejm\", \"jama\", \"lancet\", \"aim\" value overridden option(\"huxtableone.pvalue_formatter\"=function(...)) font_size (optional) font size table points font (optional) font family table (matched closest system) footer_text text needs added end table, setting FALSE dsables whole footer (options(\"huxtableone.hide_footer\"=TRUE)). show_binary_value set filter display covariates number possibilities exactly 2 value. raw_output return comparison t1_signif dataframe rather formatted table","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/compare_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compares the population against an intervention in a summary table — compare_population","text":"huxtable formatted table.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/compare_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compares the population against an intervention in a summary table — compare_population","text":"","code":"# the heuristics detect that Petals in the iris data set are not normally # distributed and hence report median and IQR: iris %>% dplyr::group_by(Species) %>% compare_population(tidyselect::everything()) #> mean_sd summary for Sepal.Length #> mean_sd summary for Sepal.Width #> median_iqr summary for Petal.Length #> median_iqr summary for Petal.Width #> anova test on Sepal.Length #> anova test on Sepal.Width #> kruskal-wallis test on Petal.Length #> kruskal-wallis test on Petal.Width #> ─────────────────────────────────────────────────────────────────────────────── #>                             setosa       versicolor   virginica                 #>   Variable     Characteri   Value        Value        Value        P value      #>                stic         (N=50)       (N=50)       (N=50)                    #> ─────────────────────────────────────────────────────────────────────────────── #>   Sepal.Leng   Mean ± SD    5.01 ±       5.94 ±       6.59 ±       <0.001 †     #>   th                        0.352        0.516        0.636                     #>   Sepal.Widt   Mean ± SD    3.43 ±       2.77 ±       2.97 ±       <0.001 †     #>   h                         0.379        0.314        0.322                     #>   Petal.Leng   Median       1.5          4.35         5.55         <0.001 ††    #>   th           [IQR]        [1.4—1.58]   [4—4.6]      [5.1—5.88]                #>   Petal.Widt   Median       0.2          1.3          2            <0.001 ††    #>   h            [IQR]        [0.2—0.3]    [1.2—1.5]    [1.8—2.3]                 #> ─────────────────────────────────────────────────────────────────────────────── #>   †, Analysis of variance (linear model) (continuous); ††,                      #>   Kruskal-Wallis rank sum test (continuous)                                     #>   Normal distributions determined by the Anderson-Darling test                  #>   (P>0.005)                                                                     #>   An adjusted P value of 0.0125 may be considered significant.                  #>  #> Column names: Variable, Characteristic, 1, 2, 3, P value  # Missing data old = options(\"huxtableone.show_pvalue_method\"=FALSE) missing_diamonds %>%   dplyr::group_by(is_colored) %>%   compare_population(-color, layout=\"relaxed\") #> median_iqr summary for carat #> subtype_count summary for cut #> subtype_count summary for clarity #> median_iqr summary for depth #> median_iqr summary for table #> median_iqr summary for price #> median_iqr summary for x #> median_iqr summary for y #> median_iqr summary for z #> 2-sided wilcoxon test on carat #> Significance testing skipped due to missing values: carat #> fisher test on cut #> Significance testing skipped due to missing values: cut #> fisher test on clarity #> Significance testing skipped due to missing values: clarity #> 2-sided wilcoxon test on depth #> Significance testing skipped due to missing values: depth #> 2-sided wilcoxon test on table #> Significance testing skipped due to missing values: table #> 2-sided wilcoxon test on price #> Significance testing skipped due to missing values: price #> 2-sided wilcoxon test on x #> Significance testing skipped due to missing values: x #> 2-sided wilcoxon test on y #> Significance testing skipped due to missing values: y #> 2-sided wilcoxon test on z #> Significance testing skipped due to missing values: z #>  ────────────────────────────────────────────────────────────────────────────── #>                          clear                 colored                          #>    Variable   Characte   Value      Count      Value      Count      P value    #>               ristic                (N=16572              (N=37368              #>                                     )                     )                     #>  ────────────────────────────────────────────────────────────────────────────── #>    carat      Median     0.53       14921      0.74       33761      —          #>               [IQR]      [0.36—0.              [0.41—1.                         #>                          9]                    13]                              #>  ────────────────────────────────────────────────────────────────────────────── #>    cut        Fair %     2.3%       349/1498   3.3%       1105/335   —          #>               [95% CI]   [2.1%—2.   0          [3.1%—3.   73                    #>                          6%]                   5%]                              #>               Good %     9.7%       1449/149   9.0%       3013/335              #>               [95% CI]   [9.2%—10   80         [8.7%—9.   73                    #>                          .2%]                  3%]                              #>               Very       23.7%      3550/149   21.6%      7266/335              #>               Good %     [23.0%—2   80         [21.2%—2   73                    #>               [95% CI]   4.4%]                 2.1%]                            #>               Premium    23.7%      3556/149   26.5%      8904/335              #>               % [95%     [23.1%—2   80         [26.1%—2   73                    #>               CI]        4.4%]                 7.0%]                            #>               Ideal %    40.6%      6076/149   39.6%      13285/33              #>               [95% CI]   [39.8%—4   80         [39.0%—4   573                   #>                          1.3%]                 0.1%]                            #>  ────────────────────────────────────────────────────────────────────────────── #>    clarity    I1 %       0.9%       129/1488   1.6%       535/3364   —          #>               [95% CI]   [0.7%—1.   7          [1.5%—1.   0                     #>                          0%]                   7%]                              #>               SI2 %      18.5%      2755/148   16.4%      5510/336              #>               [95% CI]   [17.9%—1   87         [16.0%—1   40                    #>                          9.1%]                 6.8%]                            #>               SI1 %      27.3%      4064/148   22.9%      7692/336              #>               [95% CI]   [26.6%—2   87         [22.4%—2   40                    #>                          8.0%]                 3.3%]                            #>               VS2 %      25.1%      3733/148   21.7%      7287/336              #>               [95% CI]   [24.4%—2   87         [21.2%—2   40                    #>                          5.8%]                 2.1%]                            #>               VS1 %      12.1%      1798/148   16.5%      5557/336              #>               [95% CI]   [11.6%—1   87         [16.1%—1   40                    #>                          2.6%]                 6.9%]                            #>               VVS2 %     9.3%       1390/148   9.5%       3180/336              #>               [95% CI]   [8.9%—9.   87         [9.1%—9.   40                    #>                          8%]                   8%]                              #>               VVS1 %     5.4%       809/1488   7.4%       2489/336              #>               [95% CI]   [5.1%—5.   7          [7.1%—7.   40                    #>                          8%]                   7%]                              #>               IF %       1.4%       209/1488   4.1%       1390/336              #>               [95% CI]   [1.2%—1.   7          [3.9%—4.   40                    #>                          6%]                   3%]                              #>  ────────────────────────────────────────────────────────────────────────────── #>    depth      Median     61.8       14920      61.9       33664      —          #>               [IQR]      [61—62.5              [61.1—62                         #>                          ]                     .5]                              #>  ────────────────────────────────────────────────────────────────────────────── #>    table      Median     57         14925      57         33782      —          #>               [IQR]      [56—59]               [56—59]                          #>  ────────────────────────────────────────────────────────────────────────────── #>    price      Median     1.78e+03   14985      2.79e+03   33690      —          #>               [IQR]      [893—4.1              [992—6.0                         #>                          2e+03]                1e+03]                           #>  ────────────────────────────────────────────────────────────────────────────── #>    x          Median     5.24       14939      5.83       33638      —          #>               [IQR]      [4.58—6.              [4.77—6.                         #>                          18]                   7]                               #>  ────────────────────────────────────────────────────────────────────────────── #>    y          Median     5.24       14897      5.85       33681      —          #>               [IQR]      [4.58—6.              [4.78—6.                         #>                          18]                   69]                              #>  ────────────────────────────────────────────────────────────────────────────── #>    z          Median     3.22       14985      3.6        33574      —          #>               [IQR]      [2.81—3.              [2.95—4.                         #>                          83]                   13]                              #>  ────────────────────────────────────────────────────────────────────────────── #>    Significance determined using Not calculated due to                          #>    missing values (continuous variables) or Not calculated                      #>    due to missing values (ordered variables)                                    #>    Normal distributions determined by the Anderson-Darling                      #>    test (P>0.005)                                                               #>    An adjusted P value of 0.00556 may be considered                             #>    significant.                                                                 #>  #> Column names: Variable, Characteristic, 1, 2, 3, 4, P value  tmp = missing_diamonds %>% explicit_na() %>% dplyr::group_by(is_colored) tmp %>% compare_population(-color,     footer_text = c(       \"IQR: Interquartile range; CI: Confidence interval\",       \"Line two\")     ) #> median_iqr summary for carat #> subtype_count summary for cut #> subtype_count summary for clarity #> median_iqr summary for depth #> median_iqr summary for table #> median_iqr summary for price #> median_iqr summary for x #> median_iqr summary for y #> median_iqr summary for z #> 2-sided wilcoxon test on carat #> Significance testing skipped due to missing values: carat #> fisher test on cut #> fisher test on clarity #> 2-sided wilcoxon test on depth #> Significance testing skipped due to missing values: depth #> 2-sided wilcoxon test on table #> Significance testing skipped due to missing values: table #> 2-sided wilcoxon test on price #> Significance testing skipped due to missing values: price #> 2-sided wilcoxon test on x #> Significance testing skipped due to missing values: x #> 2-sided wilcoxon test on y #> Significance testing skipped due to missing values: y #> 2-sided wilcoxon test on z #> Significance testing skipped due to missing values: z #>   ──────────────────────────────────────────────────────────────────────────── #>                                   clear          colored                       #>     Variable       Characterist   Value          Value          P value        #>                    ic             (N=16572)      (N=37368)                     #>   ──────────────────────────────────────────────────────────────────────────── #>     carat          Median [IQR]   0.53           0.74           —              #>                                   [0.36—0.9]     [0.41—1.13]                   #>   ──────────────────────────────────────────────────────────────────────────── #>     cut            Fair % [95%    2.1%           3.0%           <0.001         #>                    CI] (n)        [1.9%—2.3%]    [2.8%—3.1%]                   #>                                   (349)          (1105)                        #>                    Good % [95%    8.7%           8.1%                          #>                    CI] (n)        [8.3%—9.2%]    [7.8%—8.3%]                   #>                                   (1449)         (3013)                        #>                    Very Good %    21.4%          19.4%                         #>                    [95% CI] (n)   [20.8%—22.1%   [19.0%—19.8%                  #>                                   ] (3550)       ] (7266)                      #>                    Premium %      21.5%          23.8%                         #>                    [95% CI] (n)   [20.8%—22.1%   [23.4%—24.3%                  #>                                   ] (3556)       ] (8904)                      #>                    Ideal % [95%   36.7%          35.6%                         #>                    CI] (n)        [35.9%—37.4%   [35.1%—36.0%                  #>                                   ] (6076)       ] (13285)                     #>                    <missing> %    9.6%           10.2%                         #>                    [95% CI] (n)   [9.2%—10.1%]   [9.9%—10.5%]                  #>                                   (1592)         (3795)                        #>   ──────────────────────────────────────────────────────────────────────────── #>     clarity        I1 % [95%      0.8%           1.4%           <0.001         #>                    CI] (n)        [0.7%—0.9%]    [1.3%—1.6%]                   #>                                   (129)          (535)                         #>                    SI2 % [95%     16.6%          14.7%                         #>                    CI] (n)        [16.1%—17.2%   [14.4%—15.1%                  #>                                   ] (2755)       ] (5510)                      #>                    SI1 % [95%     24.5%          20.6%                         #>                    CI] (n)        [23.9%—25.2%   [20.2%—21.0%                  #>                                   ] (4064)       ] (7692)                      #>                    VS2 % [95%     22.5%          19.5%                         #>                    CI] (n)        [21.9%—23.2%   [19.1%—19.9%                  #>                                   ] (3733)       ] (7287)                      #>                    VS1 % [95%     10.8%          14.9%                         #>                    CI] (n)        [10.4%—11.3%   [14.5%—15.2%                  #>                                   ] (1798)       ] (5557)                      #>                    VVS2 % [95%    8.4%           8.5%                          #>                    CI] (n)        [8.0%—8.8%]    [8.2%—8.8%]                   #>                                   (1390)         (3180)                        #>                    VVS1 % [95%    4.9%           6.7%                          #>                    CI] (n)        [4.6%—5.2%]    [6.4%—6.9%]                   #>                                   (809)          (2489)                        #>                    IF % [95%      1.3%           3.7%                          #>                    CI] (n)        [1.1%—1.4%]    [3.5%—3.9%]                   #>                                   (209)          (1390)                        #>                    <missing> %    10.2%          10.0%                         #>                    [95% CI] (n)   [9.7%—10.6%]   [9.7%—10.3%]                  #>                                   (1685)         (3728)                        #>   ──────────────────────────────────────────────────────────────────────────── #>     depth          Median [IQR]   61.8           61.9           —              #>                                   [61—62.5]      [61.1—62.5]                   #>   ──────────────────────────────────────────────────────────────────────────── #>     table          Median [IQR]   57 [56—59]     57 [56—59]     —              #>   ──────────────────────────────────────────────────────────────────────────── #>     price          Median [IQR]   1.78e+03       2.79e+03       —              #>                                   [893—4.12e+0   [992—6.01e+0                  #>                                   3]             3]                            #>   ──────────────────────────────────────────────────────────────────────────── #>     x              Median [IQR]   5.24           5.83           —              #>                                   [4.58—6.18]    [4.77—6.7]                    #>   ──────────────────────────────────────────────────────────────────────────── #>     y              Median [IQR]   5.24           5.85           —              #>                                   [4.58—6.18]    [4.78—6.69]                   #>   ──────────────────────────────────────────────────────────────────────────── #>     z              Median [IQR]   3.22           3.6            —              #>                                   [2.81—3.83]    [2.95—4.13]                   #>   ──────────────────────────────────────────────────────────────────────────── #>     Significance determined using Fisher's exact test                          #>     (categorical variables) or Not calculated due to missing                   #>     values (continuous variables)                                              #>     Normal distributions determined by the Anderson-Darling test               #>     (P>0.005)                                                                  #>     IQR: Interquartile range; CI: Confidence interval                          #>     Line two                                                                   #>     An adjusted P value of 0.00556 may be considered                           #>     significant.                                                               #>  #> Column names: Variable, Characteristic, 1, 2, P value  options(old)"},{"path":"https://ai4ci.github.io/huxtableone/reference/compare_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Get summary comparisons and statistics between variables as raw data. — compare_variables","title":"Get summary comparisons and statistics between variables as raw data. — compare_variables","text":"Get summary comparisons statistics variables raw data.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/compare_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get summary comparisons and statistics between variables as raw data. — compare_variables","text":"","code":"compare_variables(   df,   ...,   label_fn = ~.x,   override_type = list(),   p_format = names(.pvalue.defaults) )"},{"path":"https://ai4ci.github.io/huxtableone/reference/compare_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get summary comparisons and statistics between variables as raw data. — compare_variables","text":"df dataframe individual observations. using tidyselect syntax data grouping defines intervention group present. formula interface used first variable right hand side formula used intervention, case grouping ignored. ... outcomes specified either tidyselect specification, case grouping df input determines intervention output compare_population() call tidyselect. Alternatively set formulae can provided specify outcomes left hand side, e.g. outcome1 ~ intervention + cov1, outcome2 ~ intervention + cov1, ... case intervention must formulae used determine comparison groups. label_fn (optional) function mapping co-variate column name printable label. default -operation output table contain dataframe column names labels. simple alternative form dplyr::case_when lookup, string function stringr::str_to_sentence. (N.b. function must vectorised). value provided overridden options(\"huxtableone.labeller\" = my_label_fn) allows global setting labeller. override_type (optional) named list data summary types. default type column data set calculated using heurisitics depending nature data (categorical continuous), result normality tests. want override options \"subtype_count\",\"median_iqr\",\"mean_sd\",\"skipped\" specify column column bases named list (e.g c(\"Petal.Width\"=\"mean_sd\")). Overriding default check type data correct summary type potentially cause errors done correctly. p_format format p-values: one \"sampl\", \"nejm\", \"jama\", \"lancet\", \"aim\" value overridden option(\"huxtableone.pvalue_formatter\"=function(...))","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/compare_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get summary comparisons and statistics between variables as raw data. — compare_variables","text":"huxtable formatted table.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/count_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Group data count and calculate proportions by column. — count_table","title":"Group data count and calculate proportions by column. — count_table","text":"Group data count calculate proportions column.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/count_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group data count and calculate proportions by column. — count_table","text":"","code":"count_table(   df,   rowGroupVars,   colGroupVars,   numExpr = dplyr::n(),   denomExpr = dplyr::n(),   totalExpr = dplyr::n(),   subgroupLevel = length(rowGroupVars),   glue = list(`Count [%] (N={sprintf(\"%d\",N)})` =     \"{sprintf(\\\"%d/%d [%1.1f%%]\\\", x, n, mean*100)}\"),   label_fn = label_extractor(df),   font_size = getOption(\"huxtableone.font_size\", 8),   font = getOption(\"huxtableone.font\", \"Arial\") )"},{"path":"https://ai4ci.github.io/huxtableone/reference/count_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group data count and calculate proportions by column. — count_table","text":"df dataframe linelist items rowGroupVars rows table. last one denominator grouping colGroupVars column groupings table. numExpr defines numerator defined context column row groups (e.g. dplyr::n()) denomExpr defines numerator defined context column row (ungrouped one level) totalExpr defines column level total defined subgroupLevel defines numerator grouping defined terms row groupings glue named list column value specifications. label_fn (optional) function mapping co-variate column name printable label. default -operation output table contain dataframe column names labels. simple alternative form dplyr::case_when lookup, string function stringr::str_to_sentence. (N.b. function must vectorised). value provided overridden options(\"huxtableone.labeller\" = my_label_fn) allows global setting labeller. font_size (optional) font size table points font (optional) font family table (matched closest system)","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/count_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group data count and calculate proportions by column. — count_table","text":"huxtable count proportions rows groups","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/count_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group data count and calculate proportions by column. — count_table","text":"","code":"diamonds %>% count_table(dplyr::vars(cut,clarity), dplyr::vars(color), subgroupLevel = 1) #>  ───────────────────────────────────────────────────────────────────────────── #>                         D          E          F          G          H          #>    cut        clarity   Count      Count      Count      Count      Count      #>                         [%]        [%]        [%]        [%]        [%]        #>                         (N=6775)   (N=9797)   (N=9542)   (N=11292   (N=8304)   #>                                                          )                     #>  ───────────────────────────────────────────────────────────────────────────── #>    Fair       I1        4/163      9/224      35/312     53/314     52/303     #>                         [2.5%]     [4.0%]     [11.2%]    [16.9%]    [17.2%]    #>               SI2       56/163     78/224     89/312     80/314     91/303     #>                         [34.4%]    [34.8%]    [28.5%]    [25.5%]    [30.0%]    #>               SI1       58/163     65/224     83/312     69/314     75/303     #>                         [35.6%]    [29.0%]    [26.6%]    [22.0%]    [24.8%]    #>               VS2       25/163     42/224     53/312     45/314     41/303     #>                         [15.3%]    [18.8%]    [17.0%]    [14.3%]    [13.5%]    #>               VS1       5/163      14/224     33/312     45/314     32/303     #>                         [3.1%]     [6.2%]     [10.6%]    [14.3%]    [10.6%]    #>               VVS2      9/163      13/224     10/312     17/314     11/303     #>                         [5.5%]     [5.8%]     [3.2%]     [5.4%]     [3.6%]     #>               VVS1      3/163      3/224      5/312      3/314      1/303      #>                         [1.8%]     [1.3%]     [1.6%]     [1.0%]     [0.3%]     #>               IF        3/163      —          4/312      2/314      —          #>                         [1.8%]                [1.3%]     [0.6%]                #>  ───────────────────────────────────────────────────────────────────────────── #>    Good       I1        8/662      23/933     19/909     19/871     14/702     #>                         [1.2%]     [2.5%]     [2.1%]     [2.2%]     [2.0%]     #>               SI2       223/662    202/933    201/909    163/871    158/702    #>                         [33.7%]    [21.7%]    [22.1%]    [18.7%]    [22.5%]    #>               SI1       237/662    355/933    273/909    207/871    235/702    #>                         [35.8%]    [38.0%]    [30.0%]    [23.8%]    [33.5%]    #>               VS2       104/662    160/933    184/909    192/871    138/702    #>                         [15.7%]    [17.1%]    [20.2%]    [22.0%]    [19.7%]    #>               VS1       43/662     89/933     132/909    152/871    77/702     #>                         [6.5%]     [9.5%]     [14.5%]    [17.5%]    [11.0%]    #>               VVS2      25/662     52/933     50/909     75/871     45/702     #>                         [3.8%]     [5.6%]     [5.5%]     [8.6%]     [6.4%]     #>               VVS1      13/662     43/933     35/909     41/871     31/702     #>                         [2.0%]     [4.6%]     [3.9%]     [4.7%]     [4.4%]     #>               IF        9/662      9/933      15/909     22/871     4/702      #>                         [1.4%]     [1.0%]     [1.7%]     [2.5%]     [0.6%]     #>  ───────────────────────────────────────────────────────────────────────────── #>    Very       I1        5/1513     22/2400    13/2164    16/2299    12/1824    #>    Good                 [0.3%]     [0.9%]     [0.6%]     [0.7%]     [0.7%]     #>               SI2       314/1513   445/2400   343/2164   327/2299   343/1824   #>                         [20.8%]    [18.5%]    [15.9%]    [14.2%]    [18.8%]    #>               SI1       494/1513   626/2400   559/2164   474/2299   547/1824   #>                         [32.7%]    [26.1%]    [25.8%]    [20.6%]    [30.0%]    #>               VS2       309/1513   503/2400   466/2164   479/2299   376/1824   #>                         [20.4%]    [21.0%]    [21.5%]    [20.8%]    [20.6%]    #>               VS1       175/1513   293/2400   293/2164   432/2299   257/1824   #>                         [11.6%]    [12.2%]    [13.5%]    [18.8%]    [14.1%]    #>               VVS2      141/1513   298/2400   249/2164   302/2299   145/1824   #>                         [9.3%]     [12.4%]    [11.5%]    [13.1%]    [7.9%]     #>               VVS1      52/1513    170/2400   174/2164   190/2299   115/1824   #>                         [3.4%]     [7.1%]     [8.0%]     [8.3%]     [6.3%]     #>               IF        23/1513    43/2400    67/2164    79/2299    29/1824    #>                         [1.5%]     [1.8%]     [3.1%]     [3.4%]     [1.6%]     #>  ───────────────────────────────────────────────────────────────────────────── #>    Premium    I1        12/1603    30/2337    34/2331    46/2924    46/2360    #>                         [0.7%]     [1.3%]     [1.5%]     [1.6%]     [1.9%]     #>               SI2       421/1603   519/2337   523/2331   492/2924   521/2360   #>                         [26.3%]    [22.2%]    [22.4%]    [16.8%]    [22.1%]    #>               SI1       556/1603   614/2337   608/2331   566/2924   655/2360   #>                         [34.7%]    [26.3%]    [26.1%]    [19.4%]    [27.8%]    #>               VS2       339/1603   629/2337   619/2331   721/2924   532/2360   #>                         [21.1%]    [26.9%]    [26.6%]    [24.7%]    [22.5%]    #>               VS1       131/1603   292/2337   290/2331   566/2924   336/2360   #>                         [8.2%]     [12.5%]    [12.4%]    [19.4%]    [14.2%]    #>               VVS2      94/1603    121/2337   146/2331   275/2924   118/2360   #>                         [5.9%]     [5.2%]     [6.3%]     [9.4%]     [5.0%]     #>               VVS1      40/1603    105/2337   80/2331    171/2924   112/2360   #>                         [2.5%]     [4.5%]     [3.4%]     [5.8%]     [4.7%]     #>               IF        10/1603    27/2337    31/2331    87/2924    40/2360    #>                         [0.6%]     [1.2%]     [1.3%]     [3.0%]     [1.7%]     #>  ───────────────────────────────────────────────────────────────────────────── #>    Ideal      I1        13/2834    18/3903    42/3826    16/4884    38/3115    #>                         [0.5%]     [0.5%]     [1.1%]     [0.3%]     [1.2%]     #>               SI2       356/2834   469/3903   453/3826   486/4884   450/3115   #>                         [12.6%]    [12.0%]    [11.8%]    [10.0%]    [14.4%]    #>               SI1       738/2834   766/3903   608/3826   660/4884   763/3115   #>                         [26.0%]    [19.6%]    [15.9%]    [13.5%]    [24.5%]    #>               VS2       920/2834   1136/390   879/3826   910/4884   556/3115   #>                         [32.5%]    3          [23.0%]    [18.6%]    [17.8%]    #>                                    [29.1%]                                     #>               VS1       351/2834   593/3903   616/3826   953/4884   467/3115   #>                         [12.4%]    [15.2%]    [16.1%]    [19.5%]    [15.0%]    #>               VVS2      284/2834   507/3903   520/3826   774/4884   289/3115   #>                         [10.0%]    [13.0%]    [13.6%]    [15.8%]    [9.3%]     #>               VVS1      144/2834   335/3903   440/3826   594/4884   326/3115   #>                         [5.1%]     [8.6%]     [11.5%]    [12.2%]    [10.5%]    #>               IF        28/2834    79/3903    268/3826   491/4884   226/3115   #>                         [1.0%]     [2.0%]     [7.0%]     [10.1%]    [7.3%]     #>  ───────────────────────────────────────────────────────────────────────────── #>  #> Column names: cut, clarity, 1, 2, 3, 4, 5, 6, 7 #>  #> 7/9 columns shown."},{"path":"https://ai4ci.github.io/huxtableone/reference/cut_integer.html","id":null,"dir":"Reference","previous_headings":"","what":"Cut and label an integer valued quantity — cut_integer","title":"Cut and label an integer valued quantity — cut_integer","text":"Deals annoying issues classifying integer data sets, ages, groups. want specify just change points integers clearly label resulting ordered factor.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/cut_integer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cut and label an integer valued quantity — cut_integer","text":"","code":"cut_integer(   x,   cut_points,   glue = \"{label}\",   lower_limit = -Inf,   upper_limit = Inf,   ... )"},{"path":"https://ai4ci.github.io/huxtableone/reference/cut_integer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cut and label an integer valued quantity — cut_integer","text":"x vector integer valued numbers, e.g. ages, counts cut_points vector integer valued cut points define lower, inclusive boundary group glue glue spec may used generate label. can use {low}, {high}, {next_low}, {label} values. lower_limit minimum value include (inclusive bottom category) (default -Inf) upper_limit maximum value include (also inclusive top category) (default Inf) ... used","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/cut_integer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cut and label an integer valued quantity — cut_integer","text":"ordered factor integer","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/cut_integer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cut and label an integer valued quantity — cut_integer","text":"","code":"cut_integer(stats::rbinom(20,20,0.5), c(5,10,15)) #>  [1] 10‒14 10‒14 5‒9   10‒14 5‒9   5‒9   5‒9   10‒14 5‒9   5‒9   10‒14 5‒9   #> [13] 10‒14 5‒9   5‒9   5‒9   5‒9   10‒14 10‒14 10‒14 #> Levels: <5 < 5‒9 < 10‒14 < ≥15 cut_integer(floor(stats::runif(100,-10,10)), cut_points = c(2,3,4,6), lower_limit=0, upper_limit=10) #>   [1] 6‒10 <NA> <NA> 2    <NA> 6‒10 <NA> 4‒5  3    <NA> 0‒1  6‒10 6‒10 0‒1  <NA> #>  [16] <NA> <NA> <NA> 6‒10 <NA> <NA> 6‒10 <NA> 2    <NA> 6‒10 <NA> 2    3    <NA> #>  [31] 6‒10 <NA> <NA> <NA> 0‒1  <NA> 0‒1  <NA> 2    <NA> <NA> 0‒1  <NA> 6‒10 <NA> #>  [46] <NA> 6‒10 <NA> <NA> <NA> 6‒10 3    <NA> <NA> <NA> <NA> 6‒10 4‒5  6‒10 <NA> #>  [61] <NA> <NA> <NA> 3    6‒10 <NA> 0‒1  <NA> <NA> 6‒10 6‒10 <NA> 6‒10 <NA> 6‒10 #>  [76] 2    6‒10 6‒10 6‒10 4‒5  <NA> 0‒1  6‒10 6‒10 <NA> 6‒10 0‒1  6‒10 3    <NA> #>  [91] <NA> 4‒5  <NA> 4‒5  <NA> 4‒5  3    0‒1  0‒1  6‒10 #> Levels: 0‒1 < 2 < 3 < 4‒5 < 6‒10 cut_integer(1:10, cut_points = c(1,3,9)) #>  [1] 1‒2 1‒2 3‒8 3‒8 3‒8 3‒8 3‒8 3‒8 ≥9  ≥9  #> Levels: <1 < 1‒2 < 3‒8 < ≥9"},{"path":"https://ai4ci.github.io/huxtableone/reference/default.format.html","id":null,"dir":"Reference","previous_headings":"","what":"Default table layout functions — default.format","title":"Default table layout functions — default.format","text":"Customisation output can use one entries starting point. custom layout look like one entries level 2 nested list, containing 4 named entries, one type table summary.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/default.format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default table layout functions — default.format","text":"","code":"default.format"},{"path":[]},{"path":"https://ai4ci.github.io/huxtableone/reference/default.format.html","id":"default-format","dir":"Reference","previous_headings":"","what":"default.format","title":"Default table layout functions — default.format","text":"names list lists: level one name table layout level two name summary type required. one subtype_count, median_iqr,mean_sd,skipped level three named list column=glue specification pairs. column (glue spec) might reference N_total, N_present .unit typically fixed string- defines name table column generate. glue specification defines layout column, can use summary statistics subtype_count can use level, prob.0.5, prob.0.025, prob.0.975, unit, n, N. n subgroup count, N data count. median_iqr can use q.0.5, q.0.25, ..., unit, n, N - n excludes missing, N . mean_sd can use mean, sd, unit, n, N - n excludes missing, N . skipped can use n, N - n excludes missing, N .","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/describe_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe the data types and consistence — describe_data","title":"Describe the data types and consistence — describe_data","text":"population description simple summary co-variates data set reference outcome, comparing intervention (although might contain intervention rates.) report summary statistics continuous counts categorical data,","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/describe_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe the data types and consistence — describe_data","text":"","code":"describe_data(   df,   ...,   label_fn = label_extractor(df),   units = extract_units(df),   layout = \"single\",   font_size = getOption(\"huxtableone.font_size\", 8),   font = getOption(\"huxtableone.font\", \"Arial\"),   footer_text = NULL,   raw_output = FALSE )"},{"path":"https://ai4ci.github.io/huxtableone/reference/describe_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe the data types and consistence — describe_data","text":"df dataframe individual observations. Grouping, present, ignored. (n.b. wanted construct multiple summary tables dplyr::group_map() call used) ... columns variables wish summarise. can given tidyselect specification (see utils::vignette(\"syntax\", package = \"tidyselect\")), identifying columns. Alternatively can given formula nature outcome ~ intervention + covariate_1 + covariate_2 + ... . may convenient going model fit. latter format left hand side ignored (outcomes usual kind table). label_fn (optional) function mapping co-variate column name printable label. default -operation output table contain dataframe column names labels. simple alternative form dplyr::case_when lookup, string function stringr::str_to_sentence. (N.b. function must vectorised). value provided overridden options(\"huxtableone.labeller\" = my_label_fn) allows global setting labeller. units (optional) named list units, following c(<colname_1> = \"<unit_1>\", <colname_2> = \"<unit_2>\", ...) format. columns present list assumed units. Units may involved formatting summary output. layout (optional) various layouts defined default. version huxtableone \"relaxed\",\"compact\",\"micro\",\"simple\",\"single\",\"missing\". layouts can customised using options options(\"huxtableone.format_list\"=list(...)\"), described detail vignettes. font_size (optional) font size table points font (optional) font family table (matched closest system) footer_text text needs added end table, setting FALSE dsables whole footer (options(\"huxtableone.hide_footer\"=TRUE)). raw_output return comparison t1_signif dataframe rather formatted table","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/describe_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Describe the data types and consistence — describe_data","text":"huxtable formatted table.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/describe_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Describe the data types and consistence — describe_data","text":"","code":"# Overriding the heuristics is possible: iris %>% describe_data(tidyselect::everything()) #>  ────────────────────────────────────────────────────────────────────────────── #>    Variable   Values /   Type       Normally   Unique     Missing    Default    #>               Units                 distribu   (%)        (%)        summary    #>                                     ted                                         #>  ────────────────────────────────────────────────────────────────────────────── #>    Sepal.Le              continuo   TRUE       23.3%      0.0%       mean_sd    #>    ngth                  us                                                     #>    Sepal.Wi              continuo   TRUE       15.3%      0.0%       mean_sd    #>    dth                   us                                                     #>    Petal.Le              continuo   FALSE      28.7%      0.0%       median_i   #>    ngth                  us                                          qr         #>    Petal.Wi              continuo   FALSE      14.7%      0.0%       median_i   #>    dth                   us                                          qr         #>    Species    setosa,    categori   —          0.0%       0.0%       subtype_   #>               versicol   cal                                         count      #>               or or                                                             #>               virginic                                                          #>               a                                                                 #>  ────────────────────────────────────────────────────────────────────────────── #>    Normal distributions determined by the Anderson-Darling                      #>    test (P>0.005)                                                               #>  #> Column names: Variable, Values / Units, 1, 2, 3, 4, 5, 6, 7 #>  #> 7/9 columns shown.  diamonds %>% dplyr::group_by(is_colored) %>% describe_data(tidyselect::everything()) #>  ────────────────────────────────────────────────────────────────────────────── #>    Variable   Values /   Type       Normally   Unique     Missing    Default    #>               Units                 distribu   (%)        (%)        summary    #>                                     ted                                         #>  ────────────────────────────────────────────────────────────────────────────── #>    carat                 continuo   FALSE      0.5%       0.0%       median_i   #>                          us                                          qr         #>    z                     continuo   FALSE      0.7%       0.0%       median_i   #>                          us                                          qr         #>    cut        Fair,      ordered    —          0.0%       0.0%       subtype_   #>               Good,                                                  count      #>               Very                                                              #>               Good,                                                             #>               Premium                                                           #>               or Ideal                                                          #>    color      D, E, F,   ordered    —          0.0%       0.0%       subtype_   #>               G, H, I                                                count      #>               or J                                                              #>    clarity    I1, SI2,   ordered    —          0.0%       0.0%       subtype_   #>               SI1,                                                   count      #>               VS2,                                                              #>               VS1,                                                              #>               VVS2,                                                             #>               VVS1 or                                                           #>               IF                                                                #>    depth                 continuo   FALSE      0.3%       0.0%       median_i   #>                          us                                          qr         #>    table                 continuo   FALSE      0.2%       0.0%       median_i   #>                          us                                          qr         #>    price                 continuo   FALSE      21.5%      0.0%       median_i   #>                          us                                          qr         #>    x                     continuo   FALSE      1.0%       0.0%       median_i   #>                          us                                          qr         #>    y                     continuo   FALSE      1.0%       0.0%       median_i   #>                          us                                          qr         #>  ────────────────────────────────────────────────────────────────────────────── #>    Normal distributions determined by the Anderson-Darling                      #>    test (P>0.005)                                                               #>  #> Column names: Variable, Values / Units, 1, 2, 3, 4, 5, 6, 7 #>  #> 7/9 columns shown."},{"path":"https://ai4ci.github.io/huxtableone/reference/describe_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe the population in a summary table — describe_population","title":"Describe the population in a summary table — describe_population","text":"population description simple summary co-variates data set reference outcome, comparing intervention (although might contain intervention rates.) report summary statistics continuous counts categorical data,","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/describe_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe the population in a summary table — describe_population","text":"","code":"describe_population(   df,   ...,   label_fn = label_extractor(df),   units = extract_units(df),   override_type = list(),   layout = \"single\",   override_percent_dp = list(),   override_real_dp = list(),   font_size = getOption(\"huxtableone.font_size\", 8),   font = getOption(\"huxtableone.font\", \"Arial\"),   footer_text = NULL,   show_binary_value = NULL,   raw_output = FALSE )"},{"path":"https://ai4ci.github.io/huxtableone/reference/describe_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe the population in a summary table — describe_population","text":"df dataframe individual observations. Grouping, present, ignored. (n.b. wanted construct multiple summary tables dplyr::group_map() call used) ... columns variables wish summarise. can given tidyselect specification (see utils::vignette(\"syntax\", package = \"tidyselect\")), identifying columns. Alternatively can given formula nature outcome ~ intervention + covariate_1 + covariate_2 + ... . may convenient going model fit. latter format left hand side ignored (outcomes usual kind table). label_fn (optional) function mapping co-variate column name printable label. default -operation output table contain dataframe column names labels. simple alternative form dplyr::case_when lookup, string function stringr::str_to_sentence. (N.b. function must vectorised). value provided overridden options(\"huxtableone.labeller\" = my_label_fn) allows global setting labeller. units (optional) named list units, following c(<colname_1> = \"<unit_1>\", <colname_2> = \"<unit_2>\", ...) format. columns present list assumed units. Units may involved formatting summary output. override_type (optional) named list data summary types. default type column data set calculated using heurisitics depending nature data (categorical continuous), result normality tests. want override options \"subtype_count\",\"median_iqr\",\"mean_sd\",\"skipped\" specify column column bases named list (e.g c(\"Petal.Width\"=\"mean_sd\")). Overriding default check type data correct summary type potentially cause errors done correctly. layout (optional) various layouts defined default. version huxtableone \"relaxed\",\"compact\",\"micro\",\"simple\",\"single\",\"missing\". layouts can customised using options options(\"huxtableone.format_list\"=list(...)\"), described detail vignettes. override_percent_dp (optional) named list overrides default precision formatting percentages, following c(<colname_1> = 2, <colname_2> = 4, ...) format. columns present list use defaults defined layout. See vignette customisation. override_real_dp (optional) named list overrides default precision formatting real values, following c(<colname_1> = 2, <colname_2> = 4, ...) format. columns present list use defaults defined layout. See utils::vignette(\"customisation\", package=\"huxtableone\"). font_size (optional) font size table points font (optional) font family table (matched closest system) footer_text text needs added end table, setting FALSE dsables whole footer (options(\"huxtableone.hide_footer\"=TRUE)). show_binary_value set filter display covariates number possibilities exactly 2 value. raw_output return comparison t1_signif dataframe rather formatted table","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/describe_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Describe the population in a summary table — describe_population","text":"huxtable formatted table.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/describe_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Describe the population in a summary table — describe_population","text":"","code":"# the heuristics detect that Petals in the iris data set are not normally # distributed and hence report median and IQR: iris %>% describe_population(tidyselect::everything()) #> mean_sd summary for Sepal.Length #> mean_sd summary for Sepal.Width #> median_iqr summary for Petal.Length #> median_iqr summary for Petal.Width #> subtype_count summary for Species #>      ────────────────────────────────────────────────────────────────────── #>        Variable       Characteristic     Value              Count (N=150)   #>      ────────────────────────────────────────────────────────────────────── #>        Sepal.Length   Mean ± SD          5.84 ± 0.828       150             #>      ────────────────────────────────────────────────────────────────────── #>        Sepal.Width    Mean ± SD          3.06 ± 0.436       150             #>      ────────────────────────────────────────────────────────────────────── #>        Petal.Length   Median [IQR]       4.35 [1.6—5.1]     150             #>      ────────────────────────────────────────────────────────────────────── #>        Petal.Width    Median [IQR]       1.3 [0.3—1.8]      150             #>      ────────────────────────────────────────────────────────────────────── #>        Species        setosa % [95%      33.3%              50/150          #>                       CI]                [26.3%—41.2%]                      #>                       versicolor %       33.3%              50/150          #>                       [95% CI]           [26.3%—41.2%]                      #>                       virginica % [95%   33.3%              50/150          #>                       CI]                [26.3%—41.2%]                      #>      ────────────────────────────────────────────────────────────────────── #>        Normal distributions determined by the Anderson-Darling              #>        test (P>0.005)                                                       #>  #> Column names: Variable, Characteristic, 1, 2  # Overriding the heuristics is possible: iris %>% describe_population(   tidyselect::everything(),   override_type = c(Petal.Length = \"mean_sd\", Petal.Width = \"mean_sd\") ) #> mean_sd summary for Sepal.Length #> mean_sd summary for Sepal.Width #> mean_sd summary for Petal.Length #> mean_sd summary for Petal.Width #> subtype_count summary for Species #>      ────────────────────────────────────────────────────────────────────── #>        Variable       Characteristic     Value              Count (N=150)   #>      ────────────────────────────────────────────────────────────────────── #>        Sepal.Length   Mean ± SD          5.84 ± 0.828       150             #>      ────────────────────────────────────────────────────────────────────── #>        Sepal.Width    Mean ± SD          3.06 ± 0.436       150             #>      ────────────────────────────────────────────────────────────────────── #>        Petal.Length   Mean ± SD          3.76 ± 1.77        150             #>      ────────────────────────────────────────────────────────────────────── #>        Petal.Width    Mean ± SD          1.2 ± 0.762        150             #>      ────────────────────────────────────────────────────────────────────── #>        Species        setosa % [95%      33.3%              50/150          #>                       CI]                [26.3%—41.2%]                      #>                       versicolor %       33.3%              50/150          #>                       [95% CI]           [26.3%—41.2%]                      #>                       virginica % [95%   33.3%              50/150          #>                       CI]                [26.3%—41.2%]                      #>      ────────────────────────────────────────────────────────────────────── #>        Normal distributions determined by the Anderson-Darling              #>        test (P>0.005)                                                       #>  #> Column names: Variable, Characteristic, 1, 2  # The counts sometimes seem redundant if there is no missing information: diamonds %>% describe_population(tidyselect::everything()) #> median_iqr summary for carat #> subtype_count summary for cut #> subtype_count summary for color #> subtype_count summary for clarity #> median_iqr summary for depth #> median_iqr summary for table #> median_iqr summary for price #> median_iqr summary for x #> median_iqr summary for y #> median_iqr summary for z #> subtype_count summary for is_colored #>      ────────────────────────────────────────────────────────────────────── #>        Variable     Characteristic     Value              Count (N=53940)   #>      ────────────────────────────────────────────────────────────────────── #>        carat        Median [IQR]       0.7 [0.4—1.04]     53940             #>      ────────────────────────────────────────────────────────────────────── #>        cut          Fair % [95% CI]    3.0% [2.8%—3.1%]   1610/53940        #>                     Good % [95% CI]    9.1% [8.9%—9.3%]   4906/53940        #>                     Very Good % [95%   22.4%              12082/53940       #>                     CI]                [22.0%—22.8%]                        #>                     Premium % [95%     25.6%              13791/53940       #>                     CI]                [25.2%—25.9%]                        #>                     Ideal % [95% CI]   40.0%              21551/53940       #>                                        [39.5%—40.4%]                        #>      ────────────────────────────────────────────────────────────────────── #>        color        D % [95% CI]       12.6%              6775/53940        #>                                        [12.3%—12.8%]                        #>                     E % [95% CI]       18.2%              9797/53940        #>                                        [17.8%—18.5%]                        #>                     F % [95% CI]       17.7%              9542/53940        #>                                        [17.4%—18.0%]                        #>                     G % [95% CI]       20.9%              11292/53940       #>                                        [20.6%—21.3%]                        #>                     H % [95% CI]       15.4%              8304/53940        #>                                        [15.1%—15.7%]                        #>                     I % [95% CI]       10.1%              5422/53940        #>                                        [9.8%—10.3%]                         #>                     J % [95% CI]       5.2% [5.0%—5.4%]   2808/53940        #>      ────────────────────────────────────────────────────────────────────── #>        clarity      I1 % [95% CI]      1.4% [1.3%—1.5%]   741/53940         #>                     SI2 % [95% CI]     17.0%              9194/53940        #>                                        [16.7%—17.4%]                        #>                     SI1 % [95% CI]     24.2%              13065/53940       #>                                        [23.9%—24.6%]                        #>                     VS2 % [95% CI]     22.7%              12258/53940       #>                                        [22.4%—23.1%]                        #>                     VS1 % [95% CI]     15.1%              8171/53940        #>                                        [14.8%—15.5%]                        #>                     VVS2 % [95% CI]    9.4% [9.1%—9.6%]   5066/53940        #>                     VVS1 % [95% CI]    6.8% [6.6%—7.0%]   3655/53940        #>                     IF % [95% CI]      3.3% [3.2%—3.5%]   1790/53940        #>      ────────────────────────────────────────────────────────────────────── #>        depth        Median [IQR]       61.8 [61—62.5]     53940             #>      ────────────────────────────────────────────────────────────────────── #>        table        Median [IQR]       57 [56—59]         53940             #>      ────────────────────────────────────────────────────────────────────── #>        price        Median [IQR]       2.4e+03            53940             #>                                        [950—5.32e+03]                       #>      ────────────────────────────────────────────────────────────────────── #>        x            Median [IQR]       5.7 [4.71—6.54]    53940             #>      ────────────────────────────────────────────────────────────────────── #>        y            Median [IQR]       5.71 [4.72—6.54]   53940             #>      ────────────────────────────────────────────────────────────────────── #>        z            Median [IQR]       3.53 [2.91—4.04]   53940             #>      ────────────────────────────────────────────────────────────────────── #>        is_colored   clear % [95% CI]   30.7%              16572/53940       #>                                        [30.3%—31.1%]                        #>                     colored % [95%     69.3%              37368/53940       #>                     CI]                [68.9%—69.7%]                        #>      ────────────────────────────────────────────────────────────────────── #>        Normal distributions determined by the Anderson-Darling              #>        test (P>0.005)                                                       #>  #> Column names: Variable, Characteristic, 1, 2  # however in a data set with missing values the denominators are important: missing_diamonds %>% describe_population(tidyselect::everything()) #> median_iqr summary for carat #> subtype_count summary for cut #> subtype_count summary for color #> subtype_count summary for clarity #> median_iqr summary for depth #> median_iqr summary for table #> median_iqr summary for price #> median_iqr summary for x #> median_iqr summary for y #> median_iqr summary for z #> subtype_count summary for is_colored #>      ────────────────────────────────────────────────────────────────────── #>        Variable     Characteristic     Value              Count (N=53940)   #>      ────────────────────────────────────────────────────────────────────── #>        carat        Median [IQR]       0.7 [0.4—1.04]     48682             #>      ────────────────────────────────────────────────────────────────────── #>        cut          Fair % [95% CI]    3.0% [2.8%—3.2%]   1454/48553        #>                     Good % [95% CI]    9.2% [8.9%—9.5%]   4462/48553        #>                     Very Good % [95%   22.3%              10816/48553       #>                     CI]                [21.9%—22.6%]                        #>                     Premium % [95%     25.7%              12460/48553       #>                     CI]                [25.3%—26.1%]                        #>                     Ideal % [95% CI]   39.9%              19361/48553       #>                                        [39.4%—40.3%]                        #>      ────────────────────────────────────────────────────────────────────── #>        color        D % [95% CI]       12.5%              6079/48569        #>                                        [12.2%—12.8%]                        #>                     E % [95% CI]       18.3%              8886/48569        #>                                        [18.0%—18.6%]                        #>                     F % [95% CI]       17.7%              8613/48569        #>                                        [17.4%—18.1%]                        #>                     G % [95% CI]       20.9%              10137/48569       #>                                        [20.5%—21.2%]                        #>                     H % [95% CI]       15.4%              7466/48569        #>                                        [15.1%—15.7%]                        #>                     I % [95% CI]       10.0%              4876/48569        #>                                        [9.8%—10.3%]                         #>                     J % [95% CI]       5.2% [5.0%—5.4%]   2512/48569        #>      ────────────────────────────────────────────────────────────────────── #>        clarity      I1 % [95% CI]      1.4% [1.3%—1.5%]   664/48527         #>                     SI2 % [95% CI]     17.0%              8265/48527        #>                                        [16.7%—17.4%]                        #>                     SI1 % [95% CI]     24.2%              11756/48527       #>                                        [23.8%—24.6%]                        #>                     VS2 % [95% CI]     22.7%              11020/48527       #>                                        [22.3%—23.1%]                        #>                     VS1 % [95% CI]     15.2%              7355/48527        #>                                        [14.8%—15.5%]                        #>                     VVS2 % [95% CI]    9.4% [9.2%—9.7%]   4570/48527        #>                     VVS1 % [95% CI]    6.8% [6.6%—7.0%]   3298/48527        #>                     IF % [95% CI]      3.3% [3.1%—3.5%]   1599/48527        #>      ────────────────────────────────────────────────────────────────────── #>        depth        Median [IQR]       61.8 [61—62.5]     48584             #>      ────────────────────────────────────────────────────────────────────── #>        table        Median [IQR]       57 [56—59]         48707             #>      ────────────────────────────────────────────────────────────────────── #>        price        Median [IQR]       2.41e+03           48675             #>                                        [952—5.33e+03]                       #>      ────────────────────────────────────────────────────────────────────── #>        x            Median [IQR]       5.69 [4.72—6.54]   48577             #>      ────────────────────────────────────────────────────────────────────── #>        y            Median [IQR]       5.71 [4.72—6.54]   48578             #>      ────────────────────────────────────────────────────────────────────── #>        z            Median [IQR]       3.52 [2.91—4.03]   48559             #>      ────────────────────────────────────────────────────────────────────── #>        is_colored   clear % [95% CI]   30.7%              16572/53940       #>                                        [30.3%—31.1%]                        #>                     colored % [95%     69.3%              37368/53940       #>                     CI]                [68.9%—69.7%]                        #>      ────────────────────────────────────────────────────────────────────── #>        Normal distributions determined by the Anderson-Darling              #>        test (P>0.005)                                                       #>  #> Column names: Variable, Characteristic, 1, 2  # for factor levels we can make the missing values more explicit missing_diamonds %>% explicit_na() %>%   describe_population(tidyselect::everything()) #> median_iqr summary for carat #> subtype_count summary for cut #> subtype_count summary for color #> subtype_count summary for clarity #> median_iqr summary for depth #> median_iqr summary for table #> median_iqr summary for price #> median_iqr summary for x #> median_iqr summary for y #> median_iqr summary for z #> subtype_count summary for is_colored #>      ────────────────────────────────────────────────────────────────────── #>        Variable     Characteristic     Value              Count (N=53940)   #>      ────────────────────────────────────────────────────────────────────── #>        carat        Median [IQR]       0.7 [0.4—1.04]     48682             #>      ────────────────────────────────────────────────────────────────────── #>        cut          Fair % [95% CI]    2.7% [2.6%—2.8%]   1454/53940        #>                     Good % [95% CI]    8.3% [8.0%—8.5%]   4462/53940        #>                     Very Good % [95%   20.1%              10816/53940       #>                     CI]                [19.7%—20.4%]                        #>                     Premium % [95%     23.1%              12460/53940       #>                     CI]                [22.7%—23.5%]                        #>                     Ideal % [95% CI]   35.9%              19361/53940       #>                                        [35.5%—36.3%]                        #>                     <missing> % [95%   10.0%              5387/53940        #>                     CI]                [9.7%—10.2%]                         #>      ────────────────────────────────────────────────────────────────────── #>        color        D % [95% CI]       11.3%              6079/53940        #>                                        [11.0%—11.5%]                        #>                     E % [95% CI]       16.5%              8886/53940        #>                                        [16.2%—16.8%]                        #>                     F % [95% CI]       16.0%              8613/53940        #>                                        [15.7%—16.3%]                        #>                     G % [95% CI]       18.8%              10137/53940       #>                                        [18.5%—19.1%]                        #>                     H % [95% CI]       13.8%              7466/53940        #>                                        [13.6%—14.1%]                        #>                     I % [95% CI]       9.0% [8.8%—9.3%]   4876/53940        #>                     J % [95% CI]       4.7% [4.5%—4.8%]   2512/53940        #>                     <missing> % [95%   10.0%              5371/53940        #>                     CI]                [9.7%—10.2%]                         #>      ────────────────────────────────────────────────────────────────────── #>        clarity      I1 % [95% CI]      1.2% [1.1%—1.3%]   664/53940         #>                     SI2 % [95% CI]     15.3%              8265/53940        #>                                        [15.0%—15.6%]                        #>                     SI1 % [95% CI]     21.8%              11756/53940       #>                                        [21.4%—22.1%]                        #>                     VS2 % [95% CI]     20.4%              11020/53940       #>                                        [20.1%—20.8%]                        #>                     VS1 % [95% CI]     13.6%              7355/53940        #>                                        [13.3%—13.9%]                        #>                     VVS2 % [95% CI]    8.5% [8.2%—8.7%]   4570/53940        #>                     VVS1 % [95% CI]    6.1% [5.9%—6.3%]   3298/53940        #>                     IF % [95% CI]      3.0% [2.8%—3.1%]   1599/53940        #>                     <missing> % [95%   10.0%              5413/53940        #>                     CI]                [9.8%—10.3%]                         #>      ────────────────────────────────────────────────────────────────────── #>        depth        Median [IQR]       61.8 [61—62.5]     48584             #>      ────────────────────────────────────────────────────────────────────── #>        table        Median [IQR]       57 [56—59]         48707             #>      ────────────────────────────────────────────────────────────────────── #>        price        Median [IQR]       2.41e+03           48675             #>                                        [952—5.33e+03]                       #>      ────────────────────────────────────────────────────────────────────── #>        x            Median [IQR]       5.69 [4.72—6.54]   48577             #>      ────────────────────────────────────────────────────────────────────── #>        y            Median [IQR]       5.71 [4.72—6.54]   48578             #>      ────────────────────────────────────────────────────────────────────── #>        z            Median [IQR]       3.52 [2.91—4.03]   48559             #>      ────────────────────────────────────────────────────────────────────── #>        is_colored   clear % [95% CI]   30.7%              16572/53940       #>                                        [30.3%—31.1%]                        #>                     colored % [95%     69.3%              37368/53940       #>                     CI]                [68.9%—69.7%]                        #>      ────────────────────────────────────────────────────────────────────── #>        Normal distributions determined by the Anderson-Darling              #>        test (P>0.005)                                                       #>  #> Column names: Variable, Characteristic, 1, 2  # in the output above the price variable is not # presented the way we would # like so here we override the number of decimal places shown for the price # variable while we are at it we will use a mid point for the decimal point, # and make the variable labels sentence case.  old = options(\"huxtableone.dp\"=\"\\u00B7\") missing_diamonds %>%   explicit_na() %>%   describe_population(     tidyselect::everything(),     label_fn=stringr::str_to_sentence,     override_real_dp=list(price=6)   ) #> median_iqr summary for Carat #> subtype_count summary for Cut #> subtype_count summary for Color #> subtype_count summary for Clarity #> median_iqr summary for Depth #> median_iqr summary for Table #> median_iqr summary for Price #> median_iqr summary for X #> median_iqr summary for Y #> median_iqr summary for Z #> subtype_count summary for Is_colored #>      ────────────────────────────────────────────────────────────────────── #>        Variable     Characteristic     Value              Count (N=53940)   #>      ────────────────────────────────────────────────────────────────────── #>        Carat        Median [IQR]       0·7 [0·4—1·04]     48682             #>      ────────────────────────────────────────────────────────────────────── #>        Cut          Fair % [95% CI]    2·7% [2·6%—2·8%]   1454/53940        #>                     Good % [95% CI]    8·3% [8·0%—8·5%]   4462/53940        #>                     Very Good % [95%   20·1%              10816/53940       #>                     CI]                [19·7%—20·4%]                        #>                     Premium % [95%     23·1%              12460/53940       #>                     CI]                [22·7%—23·5%]                        #>                     Ideal % [95% CI]   35·9%              19361/53940       #>                                        [35·5%—36·3%]                        #>                     <missing> % [95%   10·0%              5387/53940        #>                     CI]                [9·7%—10·2%]                         #>      ────────────────────────────────────────────────────────────────────── #>        Color        D % [95% CI]       11·3%              6079/53940        #>                                        [11·0%—11·5%]                        #>                     E % [95% CI]       16·5%              8886/53940        #>                                        [16·2%—16·8%]                        #>                     F % [95% CI]       16·0%              8613/53940        #>                                        [15·7%—16·3%]                        #>                     G % [95% CI]       18·8%              10137/53940       #>                                        [18·5%—19·1%]                        #>                     H % [95% CI]       13·8%              7466/53940        #>                                        [13·6%—14·1%]                        #>                     I % [95% CI]       9·0% [8·8%—9·3%]   4876/53940        #>                     J % [95% CI]       4·7% [4·5%—4·8%]   2512/53940        #>                     <missing> % [95%   10·0%              5371/53940        #>                     CI]                [9·7%—10·2%]                         #>      ────────────────────────────────────────────────────────────────────── #>        Clarity      I1 % [95% CI]      1·2% [1·1%—1·3%]   664/53940         #>                     SI2 % [95% CI]     15·3%              8265/53940        #>                                        [15·0%—15·6%]                        #>                     SI1 % [95% CI]     21·8%              11756/53940       #>                                        [21·4%—22·1%]                        #>                     VS2 % [95% CI]     20·4%              11020/53940       #>                                        [20·1%—20·8%]                        #>                     VS1 % [95% CI]     13·6%              7355/53940        #>                                        [13·3%—13·9%]                        #>                     VVS2 % [95% CI]    8·5% [8·2%—8·7%]   4570/53940        #>                     VVS1 % [95% CI]    6·1% [5·9%—6·3%]   3298/53940        #>                     IF % [95% CI]      3·0% [2·8%—3·1%]   1599/53940        #>                     <missing> % [95%   10·0%              5413/53940        #>                     CI]                [9·8%—10·3%]                         #>      ────────────────────────────────────────────────────────────────────── #>        Depth        Median [IQR]       61·8 [61—62·5]     48584             #>      ────────────────────────────────────────────────────────────────────── #>        Table        Median [IQR]       57 [56—59]         48707             #>      ────────────────────────────────────────────────────────────────────── #>        Price        Median [IQR]       2407 [952—5330]    48675             #>      ────────────────────────────────────────────────────────────────────── #>        X            Median [IQR]       5·69 [4·72—6·54]   48577             #>      ────────────────────────────────────────────────────────────────────── #>        Y            Median [IQR]       5·71 [4·72—6·54]   48578             #>      ────────────────────────────────────────────────────────────────────── #>        Z            Median [IQR]       3·52 [2·91—4·03]   48559             #>      ────────────────────────────────────────────────────────────────────── #>        Is_colored   clear % [95% CI]   30·7%              16572/53940       #>                                        [30·3%—31·1%]                        #>                     colored % [95%     69·3%              37368/53940       #>                     CI]                [68·9%—69·7%]                        #>      ────────────────────────────────────────────────────────────────────── #>        Normal distributions determined by the Anderson-Darling              #>        test (P>0.005)                                                       #>  #> Column names: Variable, Characteristic, 1, 2 options(old)"},{"path":"https://ai4ci.github.io/huxtableone/reference/diamonds.html","id":null,"dir":"Reference","previous_headings":"","what":"A copy of the diamonds dataset — diamonds","title":"A copy of the diamonds dataset — diamonds","text":"binary class is_coloured based color column","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/diamonds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A copy of the diamonds dataset — diamonds","text":"","code":"diamonds"},{"path":[]},{"path":[]},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_bind_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Bind rows for huxtables — .hux_bind_rows","title":"Bind rows for huxtables — .hux_bind_rows","text":"Sometimes vanilla bind_rows gets confused.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_bind_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind rows for huxtables — .hux_bind_rows","text":"","code":".hux_bind_rows(...)"},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_bind_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind rows for huxtables — .hux_bind_rows","text":"... list huxtables","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_bind_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bind rows for huxtables — .hux_bind_rows","text":"single huxtable","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_default_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"A tidy article theme for huxtables — .hux_default_layout","title":"A tidy article theme for huxtables — .hux_default_layout","text":"main aim get something works google docs copy paste.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_default_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A tidy article theme for huxtables — .hux_default_layout","text":"","code":".hux_default_layout(   hux,   defaultFontSize = 8,   defaultFont = \"Roboto\",   headerRows = 1 )"},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_default_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A tidy article theme for huxtables — .hux_default_layout","text":"hux huxtable object defaultFontSize default size font points (8) defaultFont font family name headerRows number rows headers","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_default_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A tidy article theme for huxtables — .hux_default_layout","text":"formatted huxtable.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_default_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A tidy article theme for huxtables — .hux_default_layout","text":"","code":"try({ hux = iris %>% .hux_default_layout() }) #> Error in .hux_default_layout(.) :  #>   could not find function \".hux_default_layout\""},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_insert_start.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert row at start maintaining format — .hux_insert_start","title":"Insert row at start maintaining format — .hux_insert_start","text":"Insert row start maintaining format","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_insert_start.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert row at start maintaining format — .hux_insert_start","text":"","code":".hux_insert_start(hux, ..., fill = \"\", colspan = 1)"},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_insert_start.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert row at start maintaining format — .hux_insert_start","text":"hux huxtable ... stuff insert cells fill padding empty cells. colspan far span first inserted cell?","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_insert_start.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert row at start maintaining format — .hux_insert_start","text":"huxtable row inserted start format","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_nest_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a huxtable narrower — .hux_nest_group","title":"Make a huxtable narrower — .hux_nest_group","text":"Converts row spanning columns column spanning header rows making table narrower longer. column moved retained allow appearance indentation.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_nest_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a huxtable narrower — .hux_nest_group","text":"","code":".hux_nest_group(t, col = 1)"},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_nest_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a huxtable narrower — .hux_nest_group","text":"t huxtable col column index want nest row ","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_nest_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a huxtable narrower — .hux_nest_group","text":"narrower huxtable","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_set_caption.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a huxtable caption as a first row — .hux_set_caption","title":"Set a huxtable caption as a first row — .hux_set_caption","text":"Keeps formatting rest table","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_set_caption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a huxtable caption as a first row — .hux_set_caption","text":"","code":".hux_set_caption(hux, caption)"},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_set_caption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a huxtable caption as a first row — .hux_set_caption","text":"hux huxtable caption caption text","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_set_caption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a huxtable caption as a first row — .hux_set_caption","text":"huxtable first row caption","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_set_font.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the font family and size in a huxtable globally — .hux_set_font","title":"Set the font family and size in a huxtable globally — .hux_set_font","text":"Set font family size huxtable globally","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_set_font.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the font family and size in a huxtable globally — .hux_set_font","text":"","code":".hux_set_font(hux, defaultFontSize = 8, defaultFont = \"Roboto\")"},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_set_font.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the font family and size in a huxtable globally — .hux_set_font","text":"hux huxtable table defaultFontSize desired font size defaultFont desired font","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_set_font.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the font family and size in a huxtable globally — .hux_set_font","text":"altered huxtable","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_set_footer.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a footer row as a final row in a huxtable — .hux_set_footer","title":"Add a footer row as a final row in a huxtable — .hux_set_footer","text":"Keeps formatting rest table except borders","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_set_footer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a footer row as a final row in a huxtable — .hux_set_footer","text":"","code":".hux_set_footer(hux, footer)"},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_set_footer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a footer row as a final row in a huxtable — .hux_set_footer","text":"hux huxtable footer footer text","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_set_footer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a footer row as a final row in a huxtable — .hux_set_footer","text":"huxtable last row footer","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_substitute_fonts.html","id":null,"dir":"Reference","previous_headings":"","what":"Pick a locally installed font family that matches requested — .hux_substitute_fonts","title":"Pick a locally installed font family that matches requested — .hux_substitute_fonts","text":"Pick locally installed font family matches requested","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_substitute_fonts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pick a locally installed font family that matches requested — .hux_substitute_fonts","text":"","code":".hux_substitute_fonts(family)"},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_substitute_fonts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pick a locally installed font family that matches requested — .hux_substitute_fonts","text":"family font family requested","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_substitute_fonts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pick a locally installed font family that matches requested — .hux_substitute_fonts","text":"mapping named list font families present system (names requested font family)","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_substitute_fonts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pick a locally installed font family that matches requested — .hux_substitute_fonts","text":"","code":"try({ .hux_substitute_fonts(c(\"Roboto\",\"Arial\",\"Kings\",\"Unmatched\")) }) #> Error in .hux_substitute_fonts(c(\"Roboto\", \"Arial\", \"Kings\", \"Unmatched\")) :  #>   could not find function \".hux_substitute_fonts\""},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_tidy.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a dataframe to a huxtable with nested rows and columns. — .hux_tidy","title":"Convert a dataframe to a huxtable with nested rows and columns. — .hux_tidy","text":"assumption input data long format tidy dataframe rows columns specified values rowGroupVars colGroupVars columns. long format (sparse) table translated nested tree rows (using rowGroupVars) nested tree columns (colGroupVars). Individual data items placed cell intersecting two trees. multiple matches additional layer grouping added columns.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_tidy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a dataframe to a huxtable with nested rows and columns. — .hux_tidy","text":"","code":".hux_tidy(   tidyDf,   rowGroupVars,   colGroupVars,   missing = \"—\",   na = \"—\",   displayRedundantColumnNames = FALSE,   ... )"},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_tidy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a dataframe to a huxtable with nested rows and columns. — .hux_tidy","text":"tidyDf dataframe row groupings (set columns) column groupings (set columns) data, data tidy format row per \"cell\" cell group. rowGroupVars dplyr::vars(...) column specification define rows grouped colGroupVars dplyr::vars(...) column specification defines columns grouped missing content given rowGroup / colGroup combination character used placeholder na NA contents character used. displayRedundantColumnNames one column per column group name column may irrelevant (e.g. col_name, value fully tidy format) col_name colGroupVars list name column value redundant displayed default. However sometimes want display named something specific e.g. including units. one column per colGroup column titles needed kept. ... passed hux_default_layout()","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/dot-hux_tidy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a dataframe to a huxtable with nested rows and columns. — .hux_tidy","text":"huxtable table","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/explicit_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Make NA values in factor columns explicit — explicit_na","title":"Make NA values in factor columns explicit — explicit_na","text":"Converts NA values factors dataframe new level - thin wrapper forcats::fct_explicit_na() missing value level added regardless whether values missing. forces empty row count tables.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/explicit_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make NA values in factor columns explicit — explicit_na","text":"","code":"explicit_na(df, na_level = \"<missing>\", hide_if_empty = FALSE)"},{"path":"https://ai4ci.github.io/huxtableone/reference/explicit_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make NA values in factor columns explicit — explicit_na","text":"df data frame na_level label NA valued factors hide_if_empty dont add missing data category data missing","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/explicit_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make NA values in factor columns explicit — explicit_na","text":"dataframe factor columns containing explicit na values","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/explicit_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make NA values in factor columns explicit — explicit_na","text":"","code":"# before missing_diamonds %>% dplyr::group_by(cut) %>% dplyr::count() #> # A tibble: 6 × 2 #> # Groups:   cut [6] #>   cut           n #>   <ord>     <int> #> 1 Fair       1454 #> 2 Good       4462 #> 3 Very Good 10816 #> 4 Premium   12460 #> 5 Ideal     19361 #> 6 NA         5387 # after missing_diamonds %>% explicit_na() %>% dplyr::group_by(cut) %>% dplyr::count() #> # A tibble: 6 × 2 #> # Groups:   cut [6] #>   cut           n #>   <fct>     <int> #> 1 Fair       1454 #> 2 Good       4462 #> 3 Very Good 10816 #> 4 Premium   12460 #> 5 Ideal     19361 #> 6 <missing>  5387"},{"path":"https://ai4ci.github.io/huxtableone/reference/extract_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Get summary comparisons and statistics between variables as raw data. — extract_comparison","title":"Get summary comparisons and statistics between variables as raw data. — extract_comparison","text":"Get summary comparisons statistics variables raw data.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/extract_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get summary comparisons and statistics between variables as raw data. — extract_comparison","text":"","code":"extract_comparison(   df,   ...,   label_fn = label_extractor(df),   override_type = list(),   p_format = names(.pvalue.defaults),   override_method = list(),   power_analysis = FALSE,   override_power = list(),   raw_output = FALSE )"},{"path":"https://ai4ci.github.io/huxtableone/reference/extract_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get summary comparisons and statistics between variables as raw data. — extract_comparison","text":"df dataframe individual observations. using tidyselect syntax data grouping defines intervention group present. formula interface used first variable right hand side formula used intervention, case grouping ignored. ... outcomes specified either tidyselect specification, case grouping df input determines intervention output compare_population() call tidyselect. Alternatively set formulae can provided specify outcomes left hand side, e.g. outcome1 ~ intervention + cov1, outcome2 ~ intervention + cov1, ... case intervention must formulae used determine comparison groups. label_fn (optional) function mapping co-variate column name printable label. default -operation output table contain dataframe column names labels. simple alternative form dplyr::case_when lookup, string function stringr::str_to_sentence. (N.b. function must vectorised). value provided overridden options(\"huxtableone.labeller\" = my_label_fn) allows global setting labeller. override_type (optional) named list data summary types. default type column data set calculated using heurisitics depending nature data (categorical continuous), result normality tests. want override options \"subtype_count\",\"median_iqr\",\"mean_sd\",\"skipped\" specify column column bases named list (e.g c(\"Petal.Width\"=\"mean_sd\")). Overriding default check type data correct summary type potentially cause errors done correctly. p_format format p-values: one \"sampl\", \"nejm\", \"jama\", \"lancet\", \"aim\" value overridden option(\"huxtableone.pvalue_formatter\"=function(...)) override_method want override comparison method particular variable options \"chi-sq trend\",\"fisher\",\"t-test\",\"2-sided wilcoxon\",\"2-sided ks\",\"anova\",\"kruskal-wallis\",\"comparison\" specify column column bases named list (e.g c(\"Petal.Width\"=\"t-test\")) power_analysis conduct sample size based power analysis. override_power want override power calculation method particular variable options \"fisher\",\"t-test\",\"2-sided wilcoxon\",\"2-sided ks\",\"anova\",\"kruskal-wallis\",\"comparison\" specify column column bases named list (e.g c(\"Petal.Width\"=\"t-test\")) raw_output return comparison t1_signif dataframe rather formatted table","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/extract_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get summary comparisons and statistics between variables as raw data. — extract_comparison","text":"list accessor functions summary data allowing granular access results analysis: comparison$compare(.variable, .characteristic = NULL) - prints comparison different intervention groups specified variable (optionally given characteristic categorical variable). comparison$filter(.variable, .intervention = NULL, .characteristic = NULL) extracts given variable (e.g. gender), optionally given level intervention (e.g. control) categorical given characteristic (e.g. male). output dataframe calculated summary variables, qualifying intervention, variable characteristic combinations, significance tests (power analyses) qualifying variable (comparing intervention groups). comparison$signif_tests(.variable) - extracts given variable (e.g. gender) significance tests (optionally power analyses) univariate comparison different interventions variable. comparison$summary_stats(.variable, .intervention = NULL, .characteristic = NULL) extracts given variable (e.g. gender), optionally given level intervention (e.g. control) categorical given characteristic (e.g. male). returns summary stats qualifying intervention, variable characteristic combinations.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/extract_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts units set as dataframe column attributes — extract_units","title":"Extracts units set as dataframe column attributes — extract_units","text":"Extracts units set dataframe column attributes","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/extract_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts units set as dataframe column attributes — extract_units","text":"","code":"extract_units(df)"},{"path":"https://ai4ci.github.io/huxtableone/reference/extract_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts units set as dataframe column attributes — extract_units","text":"df data frame set_units()","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/extract_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts units set as dataframe column attributes — extract_units","text":"named list column / unit pairs.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/extract_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracts units set as dataframe column attributes — extract_units","text":"","code":"iris = iris %>% set_units(-Species, units=\"mm\") iris %>% extract_units() #> Sepal.Length  Sepal.Width Petal.Length  Petal.Width  #>         \"mm\"         \"mm\"         \"mm\"         \"mm\"  #> attr(,\"na.action\") #> Species  #>       5  #> attr(,\"class\") #> [1] \"omit\""},{"path":"https://ai4ci.github.io/huxtableone/reference/format_pvalue.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a p-value — format_pvalue","title":"Format a p-value — format_pvalue","text":"Uses default formatter set globally options(\"huxtableone.pvalue_formatter\") preference one defined p_format used default set.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/format_pvalue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a p-value — format_pvalue","text":"","code":"format_pvalue(p.value, p_format = names(.pvalue.defaults))"},{"path":"https://ai4ci.github.io/huxtableone/reference/format_pvalue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a p-value — format_pvalue","text":"p.value p-value formatted p_format name p-value formatter (one sampl, nejm, jama, lancet, aim)","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/format_pvalue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a p-value — format_pvalue","text":"formatted P-value","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/get_footer_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Get footer text if available — get_footer_text","title":"Get footer text if available — get_footer_text","text":"functions huxtableone record methods used reporting scientific paper. normality assumption tests significance tests.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/get_footer_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get footer text if available — get_footer_text","text":"","code":"get_footer_text(df_output)"},{"path":"https://ai4ci.github.io/huxtableone/reference/get_footer_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get footer text if available — get_footer_text","text":"df_output data frame output huxtableone function","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/get_footer_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get footer text if available — get_footer_text","text":"footnotes exist list (NULL otherwise)","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/get_footer_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get footer text if available — get_footer_text","text":"","code":"iris %>% describe_population(tidyselect::everything()) %>% get_footer_text() #> mean_sd summary for Sepal.Length #> mean_sd summary for Sepal.Width #> median_iqr summary for Petal.Length #> median_iqr summary for Petal.Width #> subtype_count summary for Species #> NULL iris %>% dplyr::group_by(Species) %>%   compare_population(tidyselect::everything()) %>% get_footer_text() #> mean_sd summary for Sepal.Length #> mean_sd summary for Sepal.Width #> median_iqr summary for Petal.Length #> median_iqr summary for Petal.Width #> anova test on Sepal.Length #> anova test on Sepal.Width #> kruskal-wallis test on Petal.Length #> kruskal-wallis test on Petal.Width #> NULL"},{"path":"https://ai4ci.github.io/huxtableone/reference/group_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract one or more comparisons for inserting into text. — group_comparison","title":"Extract one or more comparisons for inserting into text. — group_comparison","text":"point need take information tables produced huxtableone place main text document. annoying done automatically. group_comparison() function enables extraction one head head comparisons provides fairly flexible mechanism building precise format desired.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/group_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract one or more comparisons for inserting into text. — group_comparison","text":"","code":"group_comparison(   t1_signif,   variable = NULL,   subgroup = NULL,   intervention = NULL,   percent_fmt = \"%1.1f%%\",   p_format = names(.pvalue.defaults),   no_summary = FALSE,   summary_glue = NULL,   summary_arrange = NULL,   summary_sep = \", \",   summary_last = \" versus \",   no_signif = FALSE,   signif_glue = NULL,   signif_sep = NULL,   signif_last = NULL )"},{"path":"https://ai4ci.github.io/huxtableone/reference/group_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract one or more comparisons for inserting into text. — group_comparison","text":"t1_signif t1_signif produced as_t1_signif() compare_population(..., raw_output = TRUE). variable variable set variables compare. missing set approriate values displayed based columns t1_signif subgroup subgroup set subgroups compare. intervention side sides intervention select. N.b. using effectively prevents statistical comparison one side available. percent_fmt sprintf format string applied probability fields summary data convert percentages. p_format format p-values: one \"sampl\", \"nejm\", \"jama\", \"lancet\", \"aim\" value overridden option(\"huxtableone.pvalue_formatter\"=function(...)) no_summary extract significance test values summary_glue glue specification maps summary statistics readable string. summary_arrange expression order summary output summary_sep separator combine summary output (see glue::glue_collapse()) summary_last separator combine last 2 summary outputs (see glue::glue_collapse()) no_signif try include significance output. Sometimes option enough comparison retained variable, subgroup, intervention filters. (Specifically comparison different subgroups, p-values different comparison intervention groups.) signif_glue glue specification maps combined summary output result significance tests, given complete comparison. signif_sep separator combine complete comparisons (see glue::glue_collapse()) signif_last separator combine last 2 complete comparisons (see glue::glue_collapse())","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/group_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract one or more comparisons for inserting into text. — group_comparison","text":"ideally single string various things returned depending hos much input constrained, sometimes provide guidance next . intention function used interactively satisfactory result obtained.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/group_comparison.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract one or more comparisons for inserting into text. — group_comparison","text":"","code":"tmp = diamonds %>%   dplyr::group_by(is_colored) %>%   set_units(price,units=\"£\") %>%   compare_population(-color, raw_output=TRUE) #> median_iqr summary for carat #> subtype_count summary for cut #> subtype_count summary for clarity #> median_iqr summary for depth #> median_iqr summary for table #> median_iqr summary for price #> median_iqr summary for x #> median_iqr summary for y #> median_iqr summary for z #> 2-sided wilcoxon test on carat #> chi-sq trend test on cut #> chi-sq trend test on clarity #> 2-sided wilcoxon test on depth #> 2-sided wilcoxon test on table #> 2-sided wilcoxon test on price #> 2-sided wilcoxon test on x #> 2-sided wilcoxon test on y #> 2-sided wilcoxon test on z  # The tabular output is retrieved by converting to a huxtable # as_huxtable(tmp, layout=\"simple\")  # An unqualified group_comparison call gives informative messages # about what can be compared: tmp %>% group_comparison() #> * `variable` can be any of: #> `carat`,`cut`,`clarity`,`depth`,`table`,`price`,`x`,`y`,`z` #> * `subgroup` can be any of: #> `Fair`,`Good`,`Very Good`,`Premium`,`Ideal`,`I1`,`SI2`,`SI1`,`VS2`,`VS1`,`VVS2`,`VVS1`,`IF` #> * `intervention` can be any of: #> `clear`,`colored` #> * `summary_glue` can use any of the following variables: #> `variable`, `unit`, `is_colored`, `q.0.025`, `q.0.05`, `q.0.25`, `q.0.5`, `q.0.75`, `q.0.95`, `q.0.975`, `n`, `N`, `.order2`, `subgroup`, `x`, `prob.0.5`, `prob.0.025`, `prob.0.975`, `N_total`, `N_present`  # filtering down the data gets us to a specific comparison: tmp %>% group_comparison(variable = \"cut\", subgroup=\"Fair\") %>% dplyr::glimpse() #> * `intervention` can be any of: #> `clear`,`colored` #> * `summary_glue` can use any of the following variables: #> `variable`, `unit`, `is_colored`, `subgroup`, `n`, `x`, `prob.0.5`, `prob.0.025`, `prob.0.975`, `.order2`, `N`, `N_total`, `N_present` #> Rows: 2 #> Columns: 13 #> Groups: variable, subgroup, is_colored [2] #> $ variable   <chr> \"cut\", \"cut\" #> $ unit       <chr> \"\", \"\" #> $ is_colored <fct> clear, colored #> $ subgroup   <fct> Fair, Fair #> $ n          <int> 16572, 37368 #> $ x          <int> 387, 1223 #> $ prob.0.5   <chr> \"2.3%\", \"3.3%\" #> $ prob.0.025 <chr> \"2.1%\", \"3.1%\" #> $ prob.0.975 <chr> \"2.6%\", \"3.5%\" #> $ .order2    <int> 1, 1 #> $ N          <int> 16572, 37368 #> $ N_total    <int> 53940, 53940 #> $ N_present  <int> 53940, 53940  # With further interactive exploration the # data available for that comparison can be made into a glue string tmp %>% group_comparison(variable = \"cut\", subgroup=\"Fair\", intervention = \"clear\",   summary_glue = \"{is_colored}: {x}/{n} ({prob.0.5}%)\",   signif_glue = \"{variable}={subgroup}; {text}; Overall p-value for '{variable}': {p.value}.\") #> [1] \"clear: 387/16572 (2.3%%)\"  # group comparisons above using many individual subgroups are a bit confusing because # the p-value is at the variable level. This is less of an issue for continuous # or binary values. tmp %>% group_comparison(   variable = \"price\",   summary_glue = \"{is_colored}: {unit}{q.0.5}; IQR: {q.0.25} \\u2014 {q.0.75} (n={n})\",   signif_glue = \"{variable}: {text}; P-value {p.value}.\") #> * `intervention` can be any of: #> `clear`,`colored` #> price: clear: £1781; IQR: 894.75 — 4092 (n=16572) versus colored: £2777.5; IQR: 990 — 6006.25 (n=37368); P-value <0.001.  # Sometimes we only want to extract a p-value: tmp %>%   group_comparison(variable = \"cut\", subgroup=\"Fair\", no_summary=TRUE) %>%   dplyr::glimpse() #> * `intervention` can be any of: #> `clear`,`colored` #> * `signif_glue` can use any of the following variables: #> `variable`, `p.value`, `p.method` #> Rows: 1 #> Columns: 3 #> Groups: variable [1] #> $ variable <chr> \"cut\" #> $ p.value  <chr> \"0.6\" #> $ p.method <chr> \"Chi-squared Test for Trend in Proportions\""},{"path":"https://ai4ci.github.io/huxtableone/reference/label_extractor.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract labels from a dataframe column attributes — label_extractor","title":"Extract labels from a dataframe column attributes — label_extractor","text":"Retrieve column labels embedded attribute column.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/label_extractor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract labels from a dataframe column attributes — label_extractor","text":"","code":"label_extractor(df, ..., attribute = \"label\")"},{"path":"https://ai4ci.github.io/huxtableone/reference/label_extractor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract labels from a dataframe column attributes — label_extractor","text":"df dataframe containing labels ... additional string manipulation functions apply e.g. tolower attribute name label containing attribute (defaults \"label\")","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/label_extractor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract labels from a dataframe column attributes — label_extractor","text":"labelling function. specific dataframe provided df","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/label_extractor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract labels from a dataframe column attributes — label_extractor","text":"","code":"iris = set_labels(iris, c(     \"Sepal Length\", \"Sepal Width\",     \"Petal Length\", \"Petal Width\",  \"Species\"  )) fn = label_extractor(iris,tolower) fn(colnames(iris)) #>   Sepal.Length    Sepal.Width   Petal.Length    Petal.Width        Species  #> \"sepal length\"  \"sepal width\" \"petal length\"  \"petal width\"      \"species\""},{"path":"https://ai4ci.github.io/huxtableone/reference/make_factors.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert discrete data to factors — make_factors","title":"Convert discrete data to factors — make_factors","text":"simpler presentation sometimes correct discrete valued data represented factors. discrete valued data might logical values, character values, numeric values limited number levels (e.g. scores). function lets convert (subset ) data frame columns factors using","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/make_factors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert discrete data to factors — make_factors","text":"","code":"make_factors(   df,   ...,   .logical = c(\"yes\", \"no\"),   .numeric = \"{name}={value}\",   .character = NULL )"},{"path":"https://ai4ci.github.io/huxtableone/reference/make_factors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert discrete data to factors — make_factors","text":"df data frame ... either tidyselect specification formula right hand side defining columns convert (left hand side ignored) .logical (optional) length 2 vector defining levels TRUE, FALSE. .numeric (optional) provided must either named list e.g. c(column_name = \"{name}:{value}\", ..., .default=\"{value}\") pairs define way numeric columns converted factor levels. single value given numerics converted way (default). values certain want convert setting limit maximum number levels generated factor may good idea (.e. options(\"huxtableone.max_discrete_levels\"=16)) otherwise values converted .character general character columns converted factor default levels. explicitly set levels named list can given c(colname_1 = c(\"level_1\", \"level_2\", ...), colname_2 = ...)","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/make_factors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert discrete data to factors — make_factors","text":"dataframe columns converted factors","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/make_factors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert discrete data to factors — make_factors","text":"","code":"iris %>%   make_factors(tidyselect::ends_with(\"Length\"), .numeric = \"{name}={round(value)}\") %>%   dplyr::glimpse() #> Rows: 150 #> Columns: 5 #> $ Sepal.Length <ord> Sepal.Length=5, Sepal.Length=5, Sepal.Length=5, Sepal.Len… #> $ Sepal.Width  <dbl> 3.5, 3.0, 3.2, 3.1, 3.6, 3.9, 3.4, 3.4, 2.9, 3.1, 3.7, 3.… #> $ Petal.Length <ord> Petal.Length=1, Petal.Length=1, Petal.Length=1, Petal.Len… #> $ Petal.Width  <dbl> 0.2, 0.2, 0.2, 0.2, 0.2, 0.4, 0.3, 0.2, 0.2, 0.1, 0.2, 0.… #> $ Species      <fct> setosa, setosa, setosa, setosa, setosa, setosa, setosa, s…  # Convert everything in diamonds to be a factor, rounding all # the numeric values and converting all the names to upper case tmp = diamonds %>%   dplyr::mutate(is_colored = color > \"F\") %>%   make_factors(tidyselect::everything(), .numeric=\"{toupper(name)}={round(value)}\")  # as we included `price` which has very many levels one factor is unuseable with 11602 levels: length(levels(tmp$price)) #> [1] 11602  # we could explicitly exclude it from the `tidyselect` syntax `...` parameter: diamonds %>% dplyr::mutate(is_colored = color > \"F\") %>%   make_factors(-price, .numeric=\"{toupper(name)}={round(value)}\") %>%   dplyr::glimpse() #> Rows: 53,940 #> Columns: 11 #> $ carat      <ord> CARAT=0, CARAT=0, CARAT=0, CARAT=0, CARAT=0, CARAT=0, CARAT… #> $ cut        <ord> Ideal, Premium, Good, Premium, Good, Very Good, Very Good, … #> $ color      <ord> E, E, E, I, J, J, I, H, E, H, J, J, F, J, E, E, I, J, J, J,… #> $ clarity    <ord> SI2, SI1, VS1, VS2, SI2, VVS2, VVS1, SI1, VS2, VS1, SI1, VS… #> $ depth      <ord> DEPTH=62, DEPTH=60, DEPTH=57, DEPTH=62, DEPTH=63, DEPTH=63,… #> $ table      <ord> TABLE=55, TABLE=61, TABLE=65, TABLE=58, TABLE=58, TABLE=57,… #> $ price      <int> 326, 326, 327, 334, 335, 336, 336, 337, 337, 338, 339, 340,… #> $ x          <ord> X=4, X=4, X=4, X=4, X=4, X=4, X=4, X=4, X=4, X=4, X=4, X=4,… #> $ y          <ord> Y=4, Y=4, Y=4, Y=4, Y=4, Y=4, Y=4, Y=4, Y=4, Y=4, Y=4, Y=4,… #> $ z          <ord> Z=2, Z=2, Z=2, Z=3, Z=3, Z=2, Z=2, Z=3, Z=2, Z=2, Z=3, Z=2,… #> $ is_colored <fct> no, no, no, yes, yes, yes, yes, yes, no, yes, yes, yes, no,…  # or alternatively we set a limit on the maximum number of factors, which # in this example picks up the `depth` and `table` columns as exceeding this # new limit:  old = options(\"huxtableone.max_discrete_levels\"=16) diamonds %>% dplyr::mutate(is_colored = color > \"F\") %>%   make_factors(tidyselect::everything(), .numeric=\"{toupper(name)}={round(value)}\") %>%   dplyr::glimpse() #> Skipping factor conversion for depth because is has 28 levels and the maximum number allowed is set to 16 #> Skipping factor conversion for table because is has 29 levels and the maximum number allowed is set to 16 #> Skipping factor conversion for price because is has 11602 levels and the maximum number allowed is set to 16 #> Rows: 53,940 #> Columns: 11 #> $ carat      <ord> CARAT=0, CARAT=0, CARAT=0, CARAT=0, CARAT=0, CARAT=0, CARAT… #> $ cut        <ord> Ideal, Premium, Good, Premium, Good, Very Good, Very Good, … #> $ color      <ord> E, E, E, I, J, J, I, H, E, H, J, J, F, J, E, E, I, J, J, J,… #> $ clarity    <ord> SI2, SI1, VS1, VS2, SI2, VVS2, VVS1, SI1, VS2, VS1, SI1, VS… #> $ depth      <dbl> 61.5, 59.8, 56.9, 62.4, 63.3, 62.8, 62.3, 61.9, 65.1, 59.4,… #> $ table      <dbl> 55, 61, 65, 58, 58, 57, 57, 55, 61, 61, 55, 56, 61, 54, 62,… #> $ price      <int> 326, 326, 327, 334, 335, 336, 336, 337, 337, 338, 339, 340,… #> $ x          <ord> X=4, X=4, X=4, X=4, X=4, X=4, X=4, X=4, X=4, X=4, X=4, X=4,… #> $ y          <ord> Y=4, Y=4, Y=4, Y=4, Y=4, Y=4, Y=4, Y=4, Y=4, Y=4, Y=4, Y=4,… #> $ z          <ord> Z=2, Z=2, Z=2, Z=3, Z=3, Z=2, Z=2, Z=3, Z=2, Z=2, Z=3, Z=2,… #> $ is_colored <fct> no, no, no, yes, yes, yes, yes, yes, no, yes, yes, yes, no,…  options(old)  # converting a character vector. Here we specify `.character` as a list giving the # possible levels of `alpha2`. Values outside of this list are converted to `NA`  set.seed(100) eg_character = tibble::tibble(   alpha1 =  sample(letters,50,replace=TRUE),   alpha2 = sample(LETTERS,50,replace=TRUE) )  eg_character %>%   make_factors(tidyselect::everything(), .character = list(alpha2 = LETTERS[3:20])) #> # A tibble: 50 × 2 #>    alpha1 alpha2 #>    <fct>  <fct>  #>  1 j      NA     #>  2 w      K      #>  3 f      G      #>  4 p      NA     #>  5 s      I      #>  6 y      F      #>  7 z      T      #>  8 n      N      #>  9 l      K      #> 10 w      M      #> # ℹ 40 more rows"},{"path":"https://ai4ci.github.io/huxtableone/reference/missing_diamonds.html","id":null,"dir":"Reference","previous_headings":"","what":"A copy of the diamonds dataset — missing_diamonds","title":"A copy of the diamonds dataset — missing_diamonds","text":"10% entries replaced NA binary class is_coloured based color column","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/missing_diamonds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A copy of the diamonds dataset — missing_diamonds","text":"","code":"missing_diamonds"},{"path":[]},{"path":[]},{"path":"https://ai4ci.github.io/huxtableone/reference/mnar_two_class_1000.html","id":null,"dir":"Reference","previous_headings":"","what":"Missing not at random 2 class 1000 items — mnar_two_class_1000","title":"Missing not at random 2 class 1000 items — mnar_two_class_1000","text":"random data test dataset 2 classes (groupings column) one 10% missing data 20%","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/mnar_two_class_1000.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Missing not at random 2 class 1000 items — mnar_two_class_1000","text":"","code":"mnar_two_class_1000"},{"path":[]},{"path":[]},{"path":"https://ai4ci.github.io/huxtableone/reference/multi_class_negative.html","id":null,"dir":"Reference","previous_headings":"","what":"A multi-class dataset with equal random samples in each class — multi_class_negative","title":"A multi-class dataset with equal random samples in each class — multi_class_negative","text":"multi-class dataset equal random samples class","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/multi_class_negative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A multi-class dataset with equal random samples in each class — multi_class_negative","text":"","code":"multi_class_negative"},{"path":[]},{"path":[]},{"path":"https://ai4ci.github.io/huxtableone/reference/one_class_test_100.html","id":null,"dir":"Reference","previous_headings":"","what":"A single-class dataset with 100 items of random data — one_class_test_100","title":"A single-class dataset with 100 items of random data — one_class_test_100","text":"columns contain set random data different types e.g. uniform continuous, normal, binomial, multinomial.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/one_class_test_100.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A single-class dataset with 100 items of random data — one_class_test_100","text":"","code":"one_class_test_100"},{"path":[]},{"path":[]},{"path":"https://ai4ci.github.io/huxtableone/reference/one_class_test_1000.html","id":null,"dir":"Reference","previous_headings":"","what":"A single-class dataset with 1000 items of random data — one_class_test_1000","title":"A single-class dataset with 1000 items of random data — one_class_test_1000","text":"columns contain set random data different types e.g. uniform continuous, normal, binomial, multinomial.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/one_class_test_1000.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A single-class dataset with 1000 items of random data — one_class_test_1000","text":"","code":"one_class_test_1000"},{"path":[]},{"path":[]},{"path":"https://ai4ci.github.io/huxtableone/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://ai4ci.github.io/huxtableone/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/remove_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove variables that fail a missing data test from models — remove_missing","title":"Remove variables that fail a missing data test from models — remove_missing","text":"Comparing missingness looking table good also want update models exclude missing data predictors.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/remove_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove variables that fail a missing data test from models — remove_missing","text":"","code":"remove_missing(   df,   ...,   label_fn = label_extractor(df),   significance_limit = 0.05,   missingness_limit = 0.1 )"},{"path":"https://ai4ci.github.io/huxtableone/reference/remove_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove variables that fail a missing data test from models — remove_missing","text":"df dataframe individual observations. using tidyselect syntax data grouping defines intervention group present. formula interface used first variable right hand side formula used intervention, case grouping ignored. ... list formulae specify models want check label_fn (optional) function mapping co-variate column name printable label. default -operation output table contain dataframe column names labels. simple alternative form dplyr::case_when lookup, string function stringr::str_to_sentence. (N.b. function must vectorised). value provided overridden options(\"huxtableone.labeller\" = my_label_fn) allows global setting labeller. significance_limit limit reject hypothesis data missing random. missingness_limit limit much data missing include predictor.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/remove_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove variables that fail a missing data test from models — remove_missing","text":"list formulae missing parameters removed","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/remove_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove variables that fail a missing data test from models — remove_missing","text":"","code":"df = iris %>%   dplyr::mutate(Petal.Width = ifelse(     stats::runif(dplyr::n()) < dplyr::case_when(       Species == \"setosa\" ~ 0.2,       Species == \"virginica\" ~ 0.1,       TRUE~0     ),     NA,     Petal.Width   )) remove_missing(df, ~ Species + Petal.Width + Sepal.Width, ~ Species + Petal.Length + Sepal.Length) #> subtype_count summary for Petal.Width #> subtype_count summary for Sepal.Width #> subtype_count summary for Petal.Length #> subtype_count summary for Sepal.Length #> fisher test on Petal.Width #> fisher test on Sepal.Width #> fisher test on Petal.Length #> fisher test on Sepal.Length #> More than 10% of data is missing for variables Petal.Width. #> Data is missing not at random (compared to Species) at a p-value<0.013 (0.05 over 4 comparisons) for variables Petal.Width. #> [[1]] #> . ~ Species + Sepal.Width #> <environment: 0x5b5f5ca65868> #>  #> [[2]] #> . ~ Species + Petal.Length + Sepal.Length #> <environment: 0x5b5f5ca65868> #>"},{"path":"https://ai4ci.github.io/huxtableone/reference/set_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a label attribute — set_labels","title":"Set a label attribute — set_labels","text":"Set label attribute","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/set_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a label attribute — set_labels","text":"","code":"set_labels(df, labels, attribute = \"label\")"},{"path":"https://ai4ci.github.io/huxtableone/reference/set_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a label attribute — set_labels","text":"df dataframe labels vector labels, one column attribute name label attribute (defaults \"label\")","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/set_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a label attribute — set_labels","text":"dataframe column labelled","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/set_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set a label attribute — set_labels","text":"","code":"iris = set_labels(iris,   c(\"Sepal Length\", \"Sepal Width\",     \"Petal Length\", \"Petal Width\",  \"Species\"    )) fn = label_extractor(iris,tolower) fn(colnames(iris)) #>   Sepal.Length    Sepal.Width   Petal.Length    Petal.Width        Species  #> \"sepal length\"  \"sepal width\" \"petal length\"  \"petal width\"      \"species\""},{"path":"https://ai4ci.github.io/huxtableone/reference/set_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — set_units","title":"Title — set_units","text":"Title","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/set_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — set_units","text":"","code":"set_units(df, ..., units)"},{"path":"https://ai4ci.github.io/huxtableone/reference/set_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — set_units","text":"df dataframe ... tidyselect specification formula units list unit strings must either 1 length columns matched tidyselect.","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/set_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — set_units","text":"dataframe unit attribute updated","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/set_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — set_units","text":"","code":"iris = iris %>% set_units(-Species, units=\"mm\") iris %>% extract_units() #> Sepal.Length  Sepal.Width Petal.Length  Petal.Width  #>         \"mm\"         \"mm\"         \"mm\"         \"mm\"  #> attr(,\"na.action\") #> Species  #>       5  #> attr(,\"class\") #> [1] \"omit\""},{"path":"https://ai4ci.github.io/huxtableone/reference/test_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"A list of columns for a test case — test_cols","title":"A list of columns for a test case — test_cols","text":"list columns test case","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/test_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list of columns for a test case — test_cols","text":"","code":"test_cols"},{"path":[]},{"path":[]},{"path":"https://ai4ci.github.io/huxtableone/reference/two_class_test.html","id":null,"dir":"Reference","previous_headings":"","what":"A two-class dataset with random data — two_class_test","title":"A two-class dataset with random data — two_class_test","text":"columns contain set random data different types e.g. uniform continuous, normal, binomial, multinomial. grouping 1 100 items grouping 2 1000 items","code":""},{"path":"https://ai4ci.github.io/huxtableone/reference/two_class_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A two-class dataset with random data — two_class_test","text":"","code":"two_class_test"},{"path":[]},{"path":[]}]
